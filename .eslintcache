[{"C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\Container\\Projects\\Datafile Morniting\\Home.jsx":"1","C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\Container\\Projects\\Datafile Morniting\\TableContainer.jsx":"2","C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\Container\\Projects\\Datafile Morniting\\filters.jsx":"3","C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\index.js":"4","C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\components\\Footer.js":"5","C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\Container\\Projects\\Datafile Morniting\\PDF.jsx":"6","C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\components\\CircleLoader.jsx":"7","C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\Container\\Login\\login.jsx":"8","C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\Container\\Signup\\signup.jsx":"9","C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\Container\\Projects\\Datafile Morniting\\ShowTable.js":"10","C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\components\\Header.jsx":"11","C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\reportWebVitals.js":"12","C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\components\\Menu.jsx":"13","C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\App.js":"14","C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\firebase.jsx":"15"},{"size":1811,"mtime":1655450331325,"results":"16","hashOfConfig":"17"},{"size":4213,"mtime":1655698323163,"results":"18","hashOfConfig":"17"},{"size":3795,"mtime":1655704092224,"results":"19","hashOfConfig":"17"},{"size":611,"mtime":1655369603245,"results":"20","hashOfConfig":"17"},{"size":696,"mtime":1655271966021,"results":"21","hashOfConfig":"17"},{"size":3411,"mtime":1655722793835,"results":"22","hashOfConfig":"17"},{"size":778,"mtime":1655265204826,"results":"23","hashOfConfig":"17"},{"size":7518,"mtime":1655351108167,"results":"24","hashOfConfig":"17"},{"size":11611,"mtime":1655722868026,"results":"25","hashOfConfig":"17"},{"size":2488,"mtime":1655702624298,"results":"26","hashOfConfig":"17"},{"size":1471,"mtime":1655781573687,"results":"27","hashOfConfig":"17"},{"size":375,"mtime":1654849381296,"results":"28","hashOfConfig":"17"},{"size":15216,"mtime":1655795639689,"results":"29","hashOfConfig":"17"},{"size":1103,"mtime":1655779164827,"results":"30","hashOfConfig":"17"},{"size":1122,"mtime":1655780186014,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1hbko9z",{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"37"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\Container\\Projects\\Datafile Morniting\\Home.jsx",["71","72"],"C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\Container\\Projects\\Datafile Morniting\\TableContainer.jsx",["73"],"import React, { Fragment } from 'react';\r\nimport {\r\n  useTable,\r\n  useSortBy,\r\n  useFilters,\r\n  useExpanded,\r\n  usePagination, \r\n} from 'react-table';\r\nimport { Table, Row, Col, Button, Input } from 'reactstrap';\r\nimport { Filter, DefaultColumnFilter } from './filters';\r\nimport './Table.css'\r\n\r\nconst TableContainer = ({ columns, data, renderRowSubComponent }) => {\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    page,\r\n    prepareRow,\r\n    visibleColumns,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    state: { pageIndex, pageSize },\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      defaultColumn: { Filter: DefaultColumnFilter },\r\n      initialState: { pageIndex: 0, pageSize: 10 },\r\n    },\r\n    useFilters,\r\n    useSortBy,\r\n    useExpanded,\r\n    usePagination\r\n  );\r\n\r\n  const generateSortingIndicator = (column) => {\r\n    return column.isSorted ? (column.isSortedDesc ? ' ðŸ”½' : ' ðŸ”¼') : '';\r\n  };\r\n\r\n  const onChangeInSelect = (event) => {\r\n    setPageSize(Number(event.target.value));\r\n  };\r\n\r\n  return (\r\n    <Fragment >\r\n        <Table bordered hover {...getTableProps()} >\r\n            <thead className='header-table'>\r\n                {headerGroups.map((headerGroup) => (\r\n                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                        {headerGroup.headers.map((column) => (\r\n                            <th {...column.getHeaderProps()} style={{width: \"fit-content\"}}>\r\n                                <div className='header-content' {...column.getSortByToggleProps()}>\r\n                                    {column.render('Header')}\r\n                                    {generateSortingIndicator(column)}\r\n                                </div>\r\n                                <Filter column={column} />\r\n                            </th>\r\n                        ))}\r\n                    </tr>\r\n                ))}\r\n            </thead>\r\n\r\n            <tbody {...getTableBodyProps()}>\r\n                {page.map((row) => {\r\n                    prepareRow(row);\r\n                    return (\r\n                            <Fragment key={row.getRowProps().key}>\r\n                                <tr>\r\n                                    {row.cells.map((cell) => {\r\n                                        return (\r\n                                            <td className='content-tabel' {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                                        );\r\n                                    })}\r\n                                </tr>\r\n                            </Fragment>\r\n                        );\r\n                    })}\r\n            </tbody>\r\n        </Table>\r\n\r\n      <Row className='under-table'>\r\n        <Col md={3}>\r\n          <Button\r\n            color='primary'\r\n            onClick={() => gotoPage(0)}\r\n            disabled={!canPreviousPage}\r\n          >\r\n            {'<<'}\r\n          </Button>\r\n          <Button\r\n            color='primary'\r\n            onClick={previousPage}\r\n            disabled={!canPreviousPage}\r\n          >\r\n            {'<'}\r\n          </Button>\r\n        </Col>\r\n        <Col md={2} style={{ marginTop: 7 }}>\r\n          Page{' '}\r\n          <strong>\r\n            {pageIndex + 1} of {pageOptions.length}\r\n          </strong>\r\n        </Col>\r\n        <Col md={2}>\r\n          <Input\r\n            type='select'\r\n            value={pageSize}\r\n            onChange={onChangeInSelect}\r\n          >\r\n            {'>'}\r\n            {[10, 20, 30, 40, 50].map((pageSize) => (\r\n              <option key={pageSize} value={pageSize}>\r\n                Show {pageSize}\r\n              </option>\r\n            ))}\r\n          </Input>\r\n        </Col>\r\n        <Col md={3}>\r\n          <Button color='primary' onClick={nextPage} disabled={!canNextPage}>\r\n            {'>'}\r\n          </Button>\r\n          <Button\r\n            color='primary'\r\n            onClick={() => gotoPage(pageCount - 1)}\r\n            disabled={!canNextPage}\r\n          >\r\n            {'>>'}\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default TableContainer;",["74","75"],"C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\Container\\Projects\\Datafile Morniting\\filters.jsx",["76"],"import React, { useState } from 'react';\r\nimport { Button, Input } from 'reactstrap';\r\nimport Box from '@mui/material/Box';\r\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\nimport './Table.css'\r\n\r\nexport const Filter = ({ column }) => {\r\n  return (\r\n    <div style={{ marginTop: 5 }}>\r\n      {column.canFilter && column.render('Filter')}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const CNUDateColumnFilter = ({\r\n  column: {\r\n    filterValue,\r\n    setFilter,\r\n    preFilteredRows: { length },\r\n  },\r\n}) => {\r\n  return (\r\n    <Input \r\n      style={{ height: \"30px\", marginLeft: \"auto\", marginRight: \"auto\"}}\r\n      value={filterValue || ''}\r\n      onChange={(e) => {\r\n        setFilter(e.target.value || undefined);\r\n      }}\r\n      placeholder={`search...`}\r\n    />\r\n  );\r\n};\r\n\r\n\r\nexport const DefaultColumnFilter = ({\r\n  column: {\r\n    filterValue,\r\n    setFilter,\r\n    preFilteredRows: { length },\r\n  },\r\n}) => {\r\n  return (\r\n    <Input \r\n      style={{ width: \"70px\", height: \"30px\", marginLeft: \"auto\", marginRight: \"auto\"}}\r\n      value={filterValue || ''}\r\n      onChange={(e) => {\r\n        setFilter(e.target.value || undefined);\r\n      }}\r\n      placeholder={`search...`}\r\n    />\r\n  );\r\n};\r\n\r\nexport const SelectColumnFilter = ({\r\n  column: { filterValue, setFilter, preFilteredRows, id },\r\n}) => {\r\n  const options = React.useMemo(() => {\r\n    const options = new Set();\r\n    preFilteredRows.forEach((row) => {\r\n      options.add(row.values[id]);\r\n    });\r\n    return [...options.values()];\r\n  }, [id, preFilteredRows]);\r\n\r\n  return (\r\n    <Input\r\n      style={{ height: \"30px\" , fontSize: \"13px\" }}\r\n      id='custom-select'\r\n      type='select'\r\n      value={filterValue}\r\n      onChange={(e) => {\r\n        setFilter(e.target.value || undefined);\r\n      }}\r\n    >\r\n      <option value=''>All</option>\r\n      {options.map((option) => (\r\n        <option key={option} value={option}>\r\n          {option}\r\n        </option>\r\n      ))}\r\n    </Input>\r\n  );\r\n};\r\n\r\nexport const DateColumnFilter = ({\r\n  column: { filterValue, setFilter },\r\n}) => {\r\n  const [value, setValue] = useState(null);\r\n  const show = (newValue) => {\r\n    try{\r\n      setValue(newValue)\r\n      let d = JSON.stringify(newValue)\r\n      let a = d.split(\"T\")\r\n      let b = a[0].split(\"-\")\r\n      let c = b[2] + \"/\"+ b[1] + \"/\" +b[0].split(\"\\\"\")[1]\r\n      console.log(\"first\", c, typeof(c))\r\n      return c\r\n    }catch {\r\n      setValue(newValue)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n      <DatePicker\r\n        label=\"Date\"\r\n        \r\n        value={value}\r\n        openTo=\"year\"\r\n        views={['year', 'month', 'day']}\r\n        dateFormat={'dd/mm/yyyy'}\r\n        onChange={(newValue) => {\r\n          setFilter(show(newValue) || undefined);\r\n          console.log(\"Filter\", filterValue, typeof(filterValue))\r\n        }}\r\n        renderInput={({ inputRef, inputProps, InputProps }) => (\r\n          <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n            <input style={{width: \"80%\"}} ref={inputRef} {...inputProps} onChange={(newValue) => {\r\n              setFilter(show(newValue) || undefined);\r\n            }}/>\r\n            {InputProps?.endAdornment}\r\n          </Box>\r\n        )}\r\n      />\r\n    </LocalizationProvider>\r\n  );\r\n};\r\n\r\nexport const NoSearch = ({\r\n  column: {\r\n    filterValue,\r\n    setFilter,\r\n    preFilteredRows: { length },\r\n  },\r\n}) => {\r\n  return (\r\n    <Input \r\n      style={{ width: \"30px\", height: \"30px\", marginLeft: \"auto\", marginRight: \"auto\"}}\r\n      value={filterValue || ''}\r\n      onChange={(e) => {\r\n        setFilter(e.target.value || undefined);\r\n      }}\r\n    />\r\n  );\r\n};","C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\index.js",[],"C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\components\\Footer.js",[],"C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\Container\\Projects\\Datafile Morniting\\PDF.jsx",["77","78","79","80"],"C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\components\\CircleLoader.jsx",[],"C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\Container\\Login\\login.jsx",["81","82","83","84","85","86","87","88"],"import React, { useState,useRef, useEffect } from 'react'\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { useNavigate } from 'react-router'\r\nimport AlertBox from '../../components/alert';\r\nimport { signInWithEmailAndPassword, signInWithPopup, signOut, deleteUser } from 'firebase/auth';\r\nimport { auth,provider } from '../../firebase';\r\nimport './login.css'\r\nimport { authSec, db } from '../../firebaseSec';\r\nimport {\r\n  collection,\r\n  getDocs,\r\n  addDoc,\r\n  deleteDoc,\r\n  updateDoc,\r\n  doc,\r\n} from \"firebase/firestore\";\r\n\r\nconst comp_form = \"@rabbit.co.th\";\r\nconst theme = createTheme();\r\nexport default function Login() {\r\n\r\n  const [userInfo, setUserInfo] = useState({ email: '', password: '' });\r\n  const [alert, setAlert] = useState({visible:false, severity:'', message:''});\r\n  const navigate = useNavigate();\r\n  const timerRef = useRef(null);\r\n\r\n  const usersCollectionRef = collection(db, \"users\");\r\n  const [blockUser, setBlockUser] = useState({ id: '',email: '', password: '', isBlock: false });\r\n\r\n  function goBlock() {\r\n    const blocker = async () => {\r\n      console.log(blockUser.isBlock)\r\n      if(blockUser.isBlock) {\r\n        setAlert({ visible:true,severity:'error',message:\"This account has been bolcked!\"})\r\n        timerRef.current= setTimeout(() => {\r\n          setAlert({ visible:false,severity:'',message:''})\r\n        },5000)\r\n      } else {\r\n        await firestoreBlock()\r\n      }\r\n\r\n      // console.log(\"data\", data.docs[1])\r\n    };\r\n\r\n    const firestoreBlock = async () => {\r\n      \r\n      const userDoc = doc(db, \"users\", blockUser.id);\r\n      updateDoc(userDoc, {\r\n        \"isBlocked\": true  \r\n      })\r\n      console.log(\"id: \", blockUser.email)\r\n    }\r\n\r\n    console.log(\"Block!!\")\r\n    blocker();\r\n  }\r\n\r\n  function getCurrentProfile() {\r\n    const getUser = async () => {\r\n      const data = await getDocs(usersCollectionRef)\r\n      .then((usersColl) => {\r\n        usersColl.docs.map((doc) => {\r\n\r\n          // if email on input equal to email in firestore will setState\r\n          if (doc.data().email === userInfo.email) {\r\n            setBlockUser({\r\n              id: doc.id,\r\n              email: doc.data().email,\r\n              password: doc.data().password,\r\n              isBlock: doc.data().isBlocked\r\n            });\r\n          }\r\n        })\r\n      })\r\n    }\r\n    getUser();\r\n  }\r\n\r\n  useEffect(() => {\r\n    // console.log(\"UseEffect\")\r\n    getCurrentProfile();\r\n  })\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if(blockUser.isBlock) {\r\n      setAlert({ visible:true,severity:'error',message:\"This account has been bolcked!\"})\r\n      timerRef.current= setTimeout(() => {\r\n        setAlert({ visible:false,severity:'',message:''})\r\n      },5000)\r\n    } else {\r\n      signInWithEmailAndPassword(auth, userInfo.email, userInfo.password)\r\n        .then(userInformation => {\r\n          console.log(userInformation);\r\n          console.log(userInfo.email.includes(comp_form));\r\n          if (userInfo.email.includes(comp_form)){\r\n            navigate('/dashboard')\r\n          }\r\n          else{\r\n            navigate('/')\r\n          }\r\n          \r\n        })\r\n        .catch(error => {\r\n\r\n          if(error.message === \"Firebase: Access to this account has been temporarily disabled due to many failed login attempts. You can immediately restore it by resetting your password or you can try again later. (auth/too-many-requests).\") {\r\n            goBlock()\r\n          } else {\r\n            setAlert({ visible:true,severity:'error',message:error.message})\r\n            console.log(error.code);\r\n            timerRef.current= setTimeout(() => {\r\n              setAlert({ visible:false,severity:'',message:''})\r\n            },5000)\r\n          }\r\n      })\r\n    }\r\n  };\r\n    \r\n  // const handlePassword = () => {\r\n  //   sendPasswordResetEmail(auth, userInfo.email)\r\n  //     .then(() => {\r\n  //       setAlert({ visible: true, severity: 'success', message: 'Email Sent Successfully' })\r\n  //        timerRef.current= setTimeout(() => {\r\n  //         setAlert({ visible:false,severity:'',message:''})\r\n  //       },2000)\r\n  //     })\r\n  //     .catch(error => {\r\n  //     setAlert({ visible:true,severity:'error',message:error.message})\r\n  //       console.log(error.code);\r\n  //       timerRef.current= setTimeout(() => {\r\n  //         setAlert({ visible:false,severity:'',message:''})\r\n  //       },2000)\r\n  //   })\r\n  // }\r\n    \r\n  const handleGoogleButton = async() => {\r\n    // provider.addScope('https://www.googleapis.com/auth/contacts.readonly');\r\n    provider.setCustomParameters ({\r\n      'login_hint': \"jsmith@rabbit.co.th\",\r\n      'hd': 'rabbit.co.th',\r\n      'promp': 'select_account'\r\n    })\r\n\r\n    const user = await signInWithPopup(auth, provider).then(result => {\r\n      console.log(result)\r\n      // if (user.auth.email.includes(comp_form)) {\r\n      //   navigate('/dashboard')\r\n      // } else {\r\n      //   deleteUser(user.id)\r\n      //   signOut(auth).then(() => {\r\n      //   navigate('/')\r\n      //   alert(\"You have to use @rabbit.co.th domain\")\r\n      //   console.log(\"signout\");\r\n      //   })\r\n      // }\r\n      navigate('/dashboard')\r\n    }).catch(error => {\r\n      console.log(error)\r\n    })\r\n\r\n    \r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <AlertBox visible={alert.visible} severity={alert.severity} message={alert.message}/>\r\n        <CssBaseline />\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <img src=\"./rabbitcard-logo.jpg\" alt=\"rabbit-logo\" style={{border: '6px solid black', borderRadius:'50%', height: '200px',width: 'auto',marginBottom: \"20px\"}} />\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              value={userInfo.email}\r\n              onChange={(event)=>{setUserInfo({...userInfo,email:event.target.value})}}\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              value={userInfo.password}\r\n              onChange={(event)=>{setUserInfo({...userInfo,password:event.target.value})}}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n            >\r\n              Sign In\r\n            </Button>\r\n          </Box>\r\n          <button className='google_button' onClick={handleGoogleButton}><img src={\"./google.png\"} alt=''/></button>\r\n        </Box>\r\n      </Container>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n",["89","90"],"C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\Container\\Signup\\signup.jsx",["91","92","93","94"],"import React, { useEffect, useRef, useState } from 'react'\r\nimport {  createUserWithEmailAndPassword, sendEmailVerification, updateProfile, onAuthStateChanged, deleteUser, updatePassword, signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport { authSec, db } from '../../firebaseSec';\r\nimport {Modal, Form, Button, InputGroup, FormControl}  from 'react-bootstrap';\r\nimport { auth } from '../../firebase'\r\nimport { useNavigate } from 'react-router'\r\nimport {\r\n  collection,\r\n  getDocs,\r\n  addDoc,\r\n  deleteDoc,\r\n  updateDoc,\r\n  doc,\r\n} from \"firebase/firestore\";\r\n\r\nimport Loading from '../../components/Loading';\r\n\r\nimport './signup.css'\r\n\r\nexport default function Signup() {\r\n\r\n  const [userInfo, setUserInfo] = useState({ userName: '', email: '', password: '' });\r\n  const [alert, setAlert] = useState({visible:false, severity:'', message:''});\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  // Use for change profile and password\r\n  const [newPassword, setNewPassword] = useState(\"\")\r\n  const [role, setRole] = useState()\r\n  const [changeUser, setChangeUser] = useState()\r\n  const [newName, setNewName] = useState(\"\")\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isActive, setActive] = useState(\"false\");\r\n  const router = useNavigate();\r\n  const timerRef = useRef(null);\r\n\r\n  const [users, setUsers] = useState([]);\r\n  const [roles, setRoles] = useState([]);\r\n  const usersCollectionRef = collection(db, \"users\");\r\n  const rolesCollectionRef = collection(db, \"roles\");\r\n\r\n  // To delete user in firebase\r\n  const deleteUserOnFstored = async (user) => {\r\n    setIsLoading(true);\r\n\r\n    // delete user in firestore\r\n    const userDoc = doc(db, \"users\", user.id);\r\n    await deleteDoc(userDoc);\r\n\r\n    // delete user in firebase auth\r\n    await signInWithEmailAndPassword(authSec, user.email, user.password)\r\n      .then(() => {\r\n        const userToDel = authSec.currentUser\r\n        deleteUser(userToDel)\r\n        authSec.signOut()\r\n      })\r\n\r\n    setIsLoading(false);\r\n    updateUI()\r\n    // window.location.reload(false);\r\n    };\r\n\r\n  // get all users in firestore and set to variable name \"users\"\r\n  useEffect(() => {\r\n    const getUsers = async () => {\r\n      const data = await getDocs(usersCollectionRef);\r\n      setUsers(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })));\r\n    };\r\n    const getRoles = async () => {\r\n      const data = await getDocs(rolesCollectionRef);\r\n      setRoles(data.docs.map((doc) => ({ ...doc.data(), id: doc.roleID })));\r\n    };\r\n\r\n    getUsers();\r\n    getRoles();\r\n    \r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    return clearTimeout(timerRef.current)\r\n  },[])\r\n  \r\n  // Check that the user are logged in\r\n  useEffect(() => {\r\n      const authentication = onAuthStateChanged(auth,(user) => {\r\n          if (user) {\r\n              router('/managementUser')\r\n          } else {\r\n              router('/')\r\n         }\r\n      }) \r\n      \r\n      return authentication\r\n  },[])\r\n\r\n  // Change Name or Password in firebase\r\n  const handleChange = async (user) => {\r\n    setIsOpen(!isOpen)\r\n    setIsLoading(true)\r\n    setChangeUser(user)\r\n\r\n    // Change in firestore\r\n    const userDoc = doc(db, \"users\", user.id);\r\n\r\n    if (newName !== \"\") {\r\n      await updateDoc(userDoc, {\r\n        \"userName\": newName\r\n      });\r\n    }\r\n\r\n    if (newPassword !== \"\") {\r\n      await updateDoc(userDoc, {\r\n        \"password\": newPassword\r\n      });\r\n    }\r\n\r\n    if (role !== \"\") {\r\n      await updateDoc(userDoc, {\r\n        \"role\": role\r\n      });\r\n    }\r\n\r\n    // Change in firebase auth\r\n    await signInWithEmailAndPassword(authSec, user.email, user.password)\r\n    .then(() => {\r\n      const userToChange = authSec.currentUser\r\n      \r\n      if(newName !== \"\") {\r\n        updateProfile(userToChange, {\r\n          displayName: newName\r\n        })\r\n      }\r\n\r\n      if(newPassword !== \"\") {\r\n        updatePassword(userToChange, newPassword)\r\n      }\r\n\r\n      setIsLoading(false);\r\n      authSec.signOut()\r\n    })\r\n    \r\n    updateUI()\r\n    // window.location.reload(false);\r\n  }\r\n\r\n  const ControlBlocked = async (user) => {\r\n    setIsLoading(true)\r\n    console.log(\"Controlblocked function\")\r\n    const userDoc = doc(db, \"users\", user.id);\r\n    await updateDoc(userDoc, {\r\n      \"isBlocked\": !user.isBlocked\r\n      \r\n    });\r\n    setIsLoading(false)\r\n    updateUI()\r\n    // window.location.reload(false);\r\n  }\r\n\r\n  // To create new user in firebase\r\n  const handleSubmit = async (event) => {\r\n    setIsLoading(true);\r\n\r\n    event.preventDefault();\r\n    \r\n    // To create user in firestore\r\n    const usersCollectionRef = collection(db, \"users\")\r\n    await addDoc(usersCollectionRef, { userName: userInfo.userName, email: userInfo.email, password: userInfo.password , isBlocked: false});\r\n    // Create user in firebase auth\r\n    createUserWithEmailAndPassword(authSec, userInfo.email, userInfo.password)\r\n      .then((userInformation) => {\r\n        updateProfile(authSec.currentUser, {\r\n          displayName:userInfo.userName\r\n        })\r\n        // createUser(); \r\n        \r\n        // router('/managementUser')\r\n      })\r\n      .catch(error => {\r\n        setAlert({ visible:true,severity:'error',message:error.message})\r\n        console.log(error.code);\r\n        timerRef.current= setTimeout(() => {\r\n          setAlert({ visible:false,severity:'',message:''})\r\n        },2000)\r\n    })\r\n    setIsLoading(false);\r\n    updateUI();\r\n    window.location.reload(false);\r\n  };\r\n\r\n  // To open/close popup and set user that send form edit btn\r\n  function changeSet(user) {\r\n    setChangeUser(user)\r\n    setIsOpen(!isOpen)\r\n    setNewName(user.userName)\r\n    setNewPassword(user.password)\r\n    setRole(user.role)\r\n    \r\n  }\r\n\r\n  function displayOption() {\r\n    setActive(!isActive);\r\n    var x = document.getElementById(\"myInput\");\r\n\r\n    if (x.type === \"password\") {\r\n      x.type = \"text\";\r\n    } else {\r\n      x.type = \"password\";\r\n    }\r\n  }\r\n\r\n  function updateUI() {\r\n    setIsLoading(true)\r\n    setInterval(() => {\r\n      console.log(\"Updating UI\")\r\n      const getUsers = async () => {\r\n        const data = await getDocs(usersCollectionRef);\r\n        setUsers(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })));\r\n        \r\n      };\r\n    \r\n    console.log(\"getUsers: \",users)\r\n    getUsers();\r\n    setIsLoading(false)\r\n    }, 200)\r\n  }\r\n\r\n  // Popup input to chnage password or name\r\n  function popup() {\r\n    \r\n    return (isOpen) ? (\r\n      <div>\r\n        <Modal show={true} onHide={(e)=>{setIsOpen(!isOpen)}}>\r\n          <Modal.Header>\r\n            <Modal.Title>Modal heading <i onClick={(e) => setIsOpen(!isOpen)} style={{cursor:\"pointer\", marginLeft:\"270px\"}} className='fa fa-times'/></Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form>\r\n              <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder={changeUser.userName}\r\n                  value={newName}\r\n                  onChange={(e) => setNewName(e.target.value)}\r\n                  autoFocus\r\n                />\r\n              </Form.Group>\r\n              <Form.Group\r\n                className=\"mb-3\"\r\n                controlId=\"exampleForm.ControlTextarea1\"\r\n              >\r\n                <Form.Label>Password</Form.Label>\r\n                <InputGroup className=\"mb-3\">\r\n                  \r\n                  <FormControl\r\n                    aria-label=\"Example text with button addon\"\r\n                    aria-describedby=\"basic-addon1\"\r\n                    id='myInput'\r\n                    type=\"password\"\r\n                    placeholder=\"password\"\r\n                    value={newPassword}\r\n                    onChange={(e) => setNewPassword(e.target.value)}\r\n                  />\r\n                  <Button variant=\"outline-secondary\" id=\"button-addon1\">\r\n                    <i class={isActive ? \"fa fa-eye\" : \"fa fa-eye-slash\"} id=\"togglePassword\" onClick={(e) => displayOption(this)}/>\r\n                  </Button>\r\n                </InputGroup>\r\n              </Form.Group>\r\n              <Form.Label>Role</Form.Label>\r\n              <Form.Select aria-label={role} defaultValue={role} onChange={(e) => setRole(e.target.value)}>\r\n                <option className=\"d-none\" value=\"\">{role}</option>\r\n                {roles.map((role) => {return (\r\n                  <option value={role.name}>{role.name}</option>\r\n                )})}\r\n              </Form.Select>\r\n            </Form>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={(e) => setIsOpen(!isOpen)}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={(e) =>{handleChange(changeUser)}}>\r\n              Save Changes\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    ) : \"\";\r\n  }\r\n\r\n   return (\r\n    <div className=\"content-wrapper\">\r\n      <Loading isLoading={isLoading} />\r\n      <h3>Management {'>'} User</h3>\r\n      \r\n      <div className='input-wrapper'>\r\n        <h4>Create New User</h4>\r\n\r\n        <div className='input-container'>\r\n          <input className='input-register'\r\n            placeholder=\"Name...\"\r\n            onChange={(event) => {\r\n              setUserInfo({ ...userInfo, userName: event.target.value })\r\n            }}\r\n          />\r\n          <input className='input-register'\r\n            type=\"Email\"\r\n            placeholder=\"Email...\"\r\n            onChange={(event) => {\r\n              setUserInfo({ ...userInfo, email: event.target.value })\r\n            }}\r\n          />\r\n          <input className='input-register'\r\n            type=\"Password\"\r\n            placeholder=\"Password...\"\r\n            onChange={(event) => {\r\n              setUserInfo({ ...userInfo, password: event.target.value })\r\n            }}\r\n          />\r\n          \r\n            <button className=\"btn\" onClick={handleSubmit}> Create User</button>\r\n          \r\n        </div>\r\n      </div>\r\n      {popup()}\r\n      <div className='table-container'>\r\n        <table class=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Number</th>\r\n              <th>First Name</th>\r\n              <th>isBlocked</th>\r\n              <th>Role</th>\r\n              <th>Email</th>\r\n              <th>function</th>\r\n            </tr>\r\n          </thead>\r\n          {users.map((user, index) => {return (\r\n          <tbody>\r\n            <tr>\r\n              <td>{index+1}</td>\r\n              <td>{user.userName}</td>\r\n              <td>{user.isBlocked.toString()}</td>\r\n              <td>{user.role}</td>\r\n              <td>{user.email}</td>\r\n              <td className='btn-table'> \r\n                <button\r\n                  className='btn-function btn'\r\n                  onClick={() => {\r\n                    deleteUserOnFstored(user);\r\n                  }}\r\n                  >\r\n                  {\" \"}\r\n                  Delete User\r\n                </button>\r\n                <button\r\n                  className='btn btn-function'\r\n                  onClick={(e) => changeSet(user)}\r\n                >\r\n                  {\" \"}\r\n                  Edit\r\n                </button>\r\n                <Button variant={user.isBlocked ? \"outline-danger\" : \"outline-secondary\"} id=\"button-addon1\" >\r\n                    <i class={user.isBlocked ? \"fa fa-lock\" : \"fa fa-unlock\"} id=\"togglePassword\" onClick={(e)=>ControlBlocked(user)}/>\r\n                </Button>\r\n              </td>\r\n            </tr>\r\n          </tbody>)})}\r\n        </table>\r\n      </div>         \r\n    </div>\r\n  );\r\n}","C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\Container\\Projects\\Datafile Morniting\\ShowTable.js",["95","96","97"],"import React, { useEffect, useState, useMemo } from 'react';\nimport {\n  Container,\n} from 'reactstrap';\nimport TableContainer from './TableContainer';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { SelectColumnFilter, DateColumnFilter, NoSearch, CNUDateColumnFilter } from './filters';\nimport { data } from '../../../Data'\nimport './Table.css'\nimport { NoEncryption } from '@mui/icons-material';\n\nconst ShowTable = () => {\n  // const [data, setData] = useState([]);\n  // useEffect(() => {\n  //   const doFetch = async () => {\n  //     const response = await fetch('https://randomuser.me/api/?results=100');\n  //     const body = await response.json();\n  //     const contacts = body.results;\n  //     console.log(contacts);\n  //     setData(contacts);\n  //     console.log(\"data\", data)\n  //   };\n  //   doFetch();\n  // }, []);\n\n  const columns = useMemo(\n    () => [\n      {\n        Header: 'ID',\n        accessor: 'id',\n        Filter: NoSearch,\n      },\n      {\n        Header: 'Device ID',\n        accessor: 'deviceId',\n      },\n      {\n        Header: 'Location ID',\n        accessor: 'locationId',\n      },\n      {\n        Header: 'Source Type',\n        accessor: 'sourceType',\n        disableSortBy: true,\n        Filter: SelectColumnFilter,\n        filter: 'equals',\n      },\n      {\n        Header: \"Status\",\n        accessor: 'status',\n        disableSortBy: true,\n        Filter: SelectColumnFilter,\n        filter: 'equals',\n      },\n      {\n        Header: () => {\n          return (\n            <div className=\"header-txn-date\">\n              <p>Txn Date</p>\n              <button onClick={() => window.location.reload(false)}><i className='fas fa-times'></i></button>\n            </div>\n          )\n        },\n        accessor: 'txnDate',\n        disableSortBy: true,\n        Filter: DateColumnFilter,\n      },\n      {\n        Header: \"Txn Type\",\n        accessor: 'txnType',\n        disableSortBy: true,\n        Filter: SelectColumnFilter,\n        filter: 'equals',\n      },\n      {\n        Header: 'Value',\n        accessor: 'value',\n      },\n      {\n        Header: 'Create Date',\n        accessor: 'createdAt',\n        Filter: CNUDateColumnFilter,\n      },\n      {\n        Header: 'Update Date',\n        accessor: 'updatedAt',\n        Filter: CNUDateColumnFilter,\n      },\n    ],\n    []\n  );\n\n  return (\n      <Container>\n        <TableContainer\n          columns={columns}\n          data={data}\n        />\n      </Container>\n  );\n};\n\nexport default ShowTable;","C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\components\\Header.jsx",["98","99","100"],"C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\reportWebVitals.js",[],["101","102"],"C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\components\\Menu.jsx",["103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126"],"C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\App.js",[],["127","128"],"C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\firebase.jsx",[],{"ruleId":"129","severity":1,"message":"130","line":2,"column":10,"nodeType":"131","messageId":"132","endLine":2,"endColumn":24},{"ruleId":"129","severity":1,"message":"133","line":7,"column":9,"nodeType":"131","messageId":"132","endLine":7,"endColumn":14},{"ruleId":"129","severity":1,"message":"134","line":20,"column":5,"nodeType":"131","messageId":"132","endLine":20,"endColumn":19},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"129","severity":1,"message":"139","line":2,"column":10,"nodeType":"131","messageId":"132","endLine":2,"endColumn":16},{"ruleId":"129","severity":1,"message":"130","line":2,"column":10,"nodeType":"131","messageId":"132","endLine":2,"endColumn":24},{"ruleId":"129","severity":1,"message":"140","line":7,"column":8,"nodeType":"131","messageId":"132","endLine":7,"endColumn":15},{"ruleId":"129","severity":1,"message":"141","line":12,"column":12,"nodeType":"131","messageId":"132","endLine":12,"endColumn":21},{"ruleId":"129","severity":1,"message":"133","line":14,"column":11,"nodeType":"131","messageId":"132","endLine":14,"endColumn":16},{"ruleId":"129","severity":1,"message":"142","line":11,"column":55,"nodeType":"131","messageId":"132","endLine":11,"endColumn":62},{"ruleId":"129","severity":1,"message":"143","line":11,"column":64,"nodeType":"131","messageId":"132","endLine":11,"endColumn":74},{"ruleId":"129","severity":1,"message":"144","line":14,"column":10,"nodeType":"131","messageId":"132","endLine":14,"endColumn":17},{"ruleId":"129","severity":1,"message":"145","line":18,"column":3,"nodeType":"131","messageId":"132","endLine":18,"endColumn":9},{"ruleId":"129","severity":1,"message":"146","line":19,"column":3,"nodeType":"131","messageId":"132","endLine":19,"endColumn":12},{"ruleId":"129","severity":1,"message":"147","line":66,"column":13,"nodeType":"131","messageId":"132","endLine":66,"endColumn":17},{"ruleId":"148","severity":1,"message":"149","line":68,"column":34,"nodeType":"150","messageId":"151","endLine":68,"endColumn":36},{"ruleId":"129","severity":1,"message":"152","line":151,"column":11,"nodeType":"131","messageId":"132","endLine":151,"endColumn":15},{"ruleId":"135","replacedBy":"153"},{"ruleId":"137","replacedBy":"154"},{"ruleId":"129","severity":1,"message":"155","line":2,"column":43,"nodeType":"131","messageId":"132","endLine":2,"endColumn":64},{"ruleId":"129","severity":1,"message":"156","line":23,"column":10,"nodeType":"131","messageId":"132","endLine":23,"endColumn":15},{"ruleId":"157","severity":1,"message":"158","line":77,"column":6,"nodeType":"159","endLine":77,"endColumn":8,"suggestions":"160"},{"ruleId":"157","severity":1,"message":"161","line":94,"column":5,"nodeType":"159","endLine":94,"endColumn":7,"suggestions":"162"},{"ruleId":"129","severity":1,"message":"163","line":1,"column":17,"nodeType":"131","messageId":"132","endLine":1,"endColumn":26},{"ruleId":"129","severity":1,"message":"164","line":1,"column":28,"nodeType":"131","messageId":"132","endLine":1,"endColumn":36},{"ruleId":"129","severity":1,"message":"165","line":10,"column":10,"nodeType":"131","messageId":"132","endLine":10,"endColumn":22},{"ruleId":"166","severity":1,"message":"167","line":28,"column":13,"nodeType":"168","endLine":28,"endColumn":69},{"ruleId":"166","severity":1,"message":"169","line":35,"column":13,"nodeType":"168","endLine":35,"endColumn":40},{"ruleId":"166","severity":1,"message":"167","line":40,"column":13,"nodeType":"168","endLine":40,"endColumn":68},{"ruleId":"135","replacedBy":"170"},{"ruleId":"137","replacedBy":"171"},{"ruleId":"129","severity":1,"message":"163","line":1,"column":27,"nodeType":"131","messageId":"132","endLine":1,"endColumn":36},{"ruleId":"129","severity":1,"message":"172","line":4,"column":10,"nodeType":"131","messageId":"132","endLine":4,"endColumn":16},{"ruleId":"129","severity":1,"message":"173","line":4,"column":18,"nodeType":"131","messageId":"132","endLine":4,"endColumn":21},{"ruleId":"129","severity":1,"message":"142","line":5,"column":10,"nodeType":"131","messageId":"132","endLine":5,"endColumn":17},{"ruleId":"129","severity":1,"message":"174","line":7,"column":10,"nodeType":"131","messageId":"132","endLine":7,"endColumn":15},{"ruleId":"148","severity":1,"message":"149","line":33,"column":28,"nodeType":"150","messageId":"151","endLine":33,"endColumn":30},{"ruleId":"129","severity":1,"message":"175","line":44,"column":9,"nodeType":"131","messageId":"132","endLine":44,"endColumn":10},{"ruleId":"148","severity":1,"message":"149","line":46,"column":28,"nodeType":"150","messageId":"151","endLine":46,"endColumn":30},{"ruleId":"129","severity":1,"message":"176","line":55,"column":9,"nodeType":"131","messageId":"132","endLine":55,"endColumn":15},{"ruleId":"166","severity":1,"message":"167","line":113,"column":17,"nodeType":"168","endLine":113,"endColumn":50},{"ruleId":"166","severity":1,"message":"167","line":122,"column":21,"nodeType":"168","endLine":122,"endColumn":54},{"ruleId":"166","severity":1,"message":"167","line":142,"column":21,"nodeType":"168","endLine":142,"endColumn":54},{"ruleId":"166","severity":1,"message":"167","line":152,"column":21,"nodeType":"168","endLine":152,"endColumn":54},{"ruleId":"166","severity":1,"message":"167","line":162,"column":17,"nodeType":"168","endLine":162,"endColumn":50},{"ruleId":"166","severity":1,"message":"167","line":171,"column":21,"nodeType":"168","endLine":171,"endColumn":54},{"ruleId":"166","severity":1,"message":"167","line":180,"column":25,"nodeType":"168","endLine":180,"endColumn":58},{"ruleId":"166","severity":1,"message":"167","line":186,"column":25,"nodeType":"168","endLine":186,"endColumn":58},{"ruleId":"166","severity":1,"message":"167","line":196,"column":21,"nodeType":"168","endLine":196,"endColumn":54},{"ruleId":"166","severity":1,"message":"167","line":217,"column":25,"nodeType":"168","endLine":217,"endColumn":58},{"ruleId":"166","severity":1,"message":"167","line":223,"column":25,"nodeType":"168","endLine":223,"endColumn":58},{"ruleId":"166","severity":1,"message":"167","line":233,"column":17,"nodeType":"168","endLine":233,"endColumn":50},{"ruleId":"166","severity":1,"message":"167","line":242,"column":21,"nodeType":"168","endLine":242,"endColumn":54},{"ruleId":"166","severity":1,"message":"167","line":251,"column":25,"nodeType":"168","endLine":251,"endColumn":58},{"ruleId":"166","severity":1,"message":"167","line":257,"column":25,"nodeType":"168","endLine":257,"endColumn":58},{"ruleId":"135","replacedBy":"177"},{"ruleId":"137","replacedBy":"178"},"no-unused-vars","'MDBDataTableV5' is defined but never used.","Identifier","unusedVar","'data1' is assigned a value but never used.","'visibleColumns' is assigned a value but never used.","no-native-reassign",["179"],"no-negated-in-lhs",["180"],"'Button' is defined but never used.","'Loading' is defined but never used.","'isLoading' is assigned a value but never used.","'signOut' is defined but never used.","'deleteUser' is defined but never used.","'authSec' is defined but never used.","'addDoc' is defined but never used.","'deleteDoc' is defined but never used.","'data' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'user' is assigned a value but never used.",["179"],["180"],"'sendEmailVerification' is defined but never used.","'alert' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'rolesCollectionRef' and 'usersCollectionRef'. Either include them or remove the dependency array.","ArrayExpression",["181"],"React Hook useEffect has a missing dependency: 'router'. Either include it or remove the dependency array.",["182"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'NoEncryption' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["179"],["180"],"'getDoc' is defined but never used.","'doc' is defined but never used.","'async' is defined but never used.","'i' is assigned a value but never used.","'router' is assigned a value but never used.",["179"],["180"],"no-global-assign","no-unsafe-negation",{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},"Update the dependencies array to be: [rolesCollectionRef, usersCollectionRef]",{"range":"187","text":"188"},"Update the dependencies array to be: [router]",{"range":"189","text":"190"},[2554,2556],"[rolesCollectionRef, usersCollectionRef]",[2941,2943],"[router]"]