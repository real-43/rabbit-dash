[{"C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\Container\\Management\\ManageProject.jsx":"1","C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\Container\\Management\\Permission\\CreatePermissionAdmin.jsx":"2","C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\Container\\Management\\Permission\\CreatePermissionOthers.jsx":"3","C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\reportWebVitals.js":"4","C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\components\\Menu.jsx":"5","C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\components\\CircleLoader.jsx":"6","C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\Container\\Management\\Permission\\PermissionForAdmin.jsx":"7","C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\Container\\Management\\Permission\\PermissionForOthers.jsx":"8","C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\index.js":"9","C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\Container\\Login\\login.jsx":"10","C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\Container\\Management\\ManageUser.jsx":"11","C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\components\\Loading.jsx":"12","C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\Container\\Projects\\BTSQR\\containers\\Monitors\\Bts_Search.jsx":"13","C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\Container\\Projects\\Datafile Morniting\\ShowTable.js":"14","C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\Container\\Projects\\Rabbit SmartWatch\\containers\\Monitors\\Smartwatch_Search.jsx":"15"},{"size":14311,"mtime":1657163237372,"results":"16","hashOfConfig":"17"},{"size":7944,"mtime":1657083273701,"results":"18","hashOfConfig":"17"},{"size":7489,"mtime":1657081928404,"results":"19","hashOfConfig":"17"},{"size":375,"mtime":1654849381296,"results":"20","hashOfConfig":"17"},{"size":14132,"mtime":1657082472285,"results":"21","hashOfConfig":"17"},{"size":778,"mtime":1655265204826,"results":"22","hashOfConfig":"17"},{"size":21189,"mtime":1657162338782,"results":"23","hashOfConfig":"17"},{"size":14085,"mtime":1657162651449,"results":"24","hashOfConfig":"17"},{"size":1005,"mtime":1656554588044,"results":"25","hashOfConfig":"17"},{"size":7335,"mtime":1657006978038,"results":"26","hashOfConfig":"17"},{"size":12710,"mtime":1657179726152,"results":"27","hashOfConfig":"17"},{"size":363,"mtime":1657083515987,"results":"28","hashOfConfig":"17"},{"size":17228,"mtime":1657179728222,"results":"29","hashOfConfig":"17"},{"size":2433,"mtime":1656999696575,"results":"30","hashOfConfig":"17"},{"size":11862,"mtime":1657180328871,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"1hbko9z",{"filePath":"36","messages":"37","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"35"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"35"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\Container\\Management\\ManageProject.jsx",["66","67","68","69","70","71","72","73","74","75","76"],"import React, { useState, useEffect }from 'react';\r\nimport { db } from '../../Firebase Config/firebaseSec';\r\nimport { auth } from '../../Firebase Config/firebase';\r\nimport { Table } from 'react-bootstrap';\r\nimport { Modal, Form, Button }  from 'react-bootstrap';\r\nimport \"./signup.css\";\r\nimport Chip from '@mui/material/Chip';\r\nimport Stack from '@mui/material/Stack';\r\nimport ChipInput from 'material-ui-chip-input'\r\nimport Loading from '../../components/Loading';\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { addTask, defindAllProjects, defindAllRoles } from '../../Reducer/firebaseSlice';\r\nimport {\r\n    collection,\r\n    addDoc,\r\n    deleteDoc,\r\n    updateDoc,\r\n    doc,\r\n    arrayUnion,\r\n    arrayRemove,\r\n    onSnapshot\r\n  } from \"firebase/firestore\";\r\nimport { useNavigate } from 'react-router';\r\nimport { onAuthStateChanged } from 'firebase/auth';\r\n\r\nconst ManageProject = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n    const user = auth.currentUser\r\n    \r\n    const [newProjectName,setNewProjectName] = useState(\"\")\r\n    const [newSubM,setNewSubM] = useState([])\r\n    const [changeProject,setChangeProject] = useState(null)\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [isDel, setIsDel] = useState(false)\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    //handle input \r\n    const [projectInfo, setProjectInfo] = useState({ name: ''});\r\n    const [submenu, setSubmenu] = useState([])\r\n\r\n    const [projectName,setProjectName] =  useState([])\r\n    \r\n    const projectsR = useSelector((state)=> state.firebase.allProjects)\r\n    const rolesR = useSelector((state) => state.firebase.allRoles)\r\n\r\n    const [projects, setProjects] = useState([...projectsR]);\r\n\r\n    const [roles, setRoles] = useState([...rolesR]);\r\n    const roleR = useSelector((state) => state.firebase.currentRoleFS)\r\n    const [role, setRole] = useState(roleR);\r\n\r\n    const AdminDoc = doc(db, \"roles\", 'XKvFX3M9e07w0qcpxd32');\r\n\r\n    const userinfo = useSelector((state) => state.firebase.currentUserFS)\r\n\r\n    useEffect(() => {\r\n        const authentication = onAuthStateChanged(auth,(user) => {\r\n            if (!user) {\r\n                navigate('/')\r\n            }\r\n        }) \r\n        \r\n        return authentication\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        setRoles([...rolesR])\r\n    }, [rolesR])\r\n\r\n    useEffect(() => {\r\n        setProjects([...projectsR])\r\n    }, [projectsR])\r\n\r\n    useEffect(() => {\r\n        setRole(roleR)\r\n    }, [roleR])\r\n\r\n    const addProjects = async (e) => {\r\n        e.preventDefault();\r\n        setIsLoading(true)\r\n\r\n        dispatch(addTask(\"Add project\"))\r\n\r\n        // let rest = [...projects]\r\n        // rest.push({name: projectInfo.name, subMenu: submenu[submenu.length-1]})\r\n\r\n        // setProjects(rest) \r\n\r\n        var a = []\r\n        for (const element of role.Management.Project) {\r\n            a.push(element);\r\n        }\r\n        a.push(projectInfo.name)\r\n\r\n        var NewProjectManagement = {\r\n            \"Project\": a,\r\n            \"Permission\": a,\r\n            \"Services\": a\r\n        }\r\n        \r\n        var NewProject = {\r\n            name: projectInfo.name,\r\n            subMenu: submenu,\r\n        }\r\n\r\n        await addDoc(collection(db, \"projects\"), NewProject);\r\n        roles.map((role) => { \r\n            if(role.name === 'Admin'){\r\n                updateDoc(AdminDoc,{\r\n                    project: arrayUnion(NewProject),\r\n                    Management: NewProjectManagement\r\n                });\r\n            }   \r\n        });\r\n\r\n        setProjectInfo({ ...projectInfo, name: \"\" })\r\n        setSubmenu([])\r\n        setIsLoading(false)\r\n    }\r\n\r\n    const deleteProjects = async () => {\r\n        const userDoc = doc(db, \"projects\", changeProject.id);\r\n        setIsLoading(true)\r\n\r\n        setIsDel(false)\r\n\r\n        dispatch(addTask(\"Delete project\"))\r\n\r\n        let rest = []\r\n        role.Management.Project.map((p) => {\r\n            if (p !== changeProject.name) {\r\n                rest.push(p)\r\n            }\r\n        })\r\n        setRole({...role, Management: {Permission: rest, Project: rest, Services: rest}})\r\n\r\n        var DelProjectManagement = {\r\n            Project: role.Management.Project.filter(obj => obj !== changeProject.name),\r\n            Permission: role.Management.Permission.filter(obj => obj !== changeProject.name),\r\n            Services: role.Management.Services.filter(obj => obj !== changeProject.name)\r\n\r\n        }\r\n        var DelProjectDetails = {\r\n            name: changeProject.name,\r\n            subMenu: changeProject.subMenu\r\n        }\r\n        await deleteDoc(userDoc);\r\n        roles.map((role) =>{ \r\n            const roleDoc = doc(db, \"roles\", role.id)\r\n            role.project?.map((submenu) =>{\r\n                if(submenu.name === changeProject.name){\r\n                    updateDoc(roleDoc,{\r\n                        project: arrayRemove(DelProjectDetails),\r\n                        Management:DelProjectManagement\r\n                    });\r\n                }      \r\n            })\r\n        }); \r\n        \r\n        handleCloseDel()\r\n        setIsLoading(false)\r\n    }\r\n\r\n    const editProject = async (project) =>{\r\n\r\n        setIsLoading(true)\r\n\r\n        dispatch(addTask(\"Edit project\"))\r\n\r\n        setIsOpen(!isOpen)\r\n        const projectDoc = doc(db, \"projects\", project.id);\r\n    \r\n        await updateDoc(projectDoc, {\r\n            \"name\": newProjectName,\r\n            \"subMenu\": submenu\r\n        });\r\n\r\n        roles.map((role) =>{ \r\n            const roleDoc = doc(db, \"roles\", role.id)\r\n            role.project?.map((proJ) =>{\r\n                if(proJ.name === project.name){\r\n                    updateDoc(roleDoc,{\r\n                        project: arrayRemove({\r\n                            name: project.name,\r\n                            subMenu: project.subMenu\r\n                        }),\r\n                    });  \r\n                    updateDoc(roleDoc,{\r\n                        project: arrayUnion({\r\n                            name: newProjectName,\r\n                            subMenu: submenu\r\n                        })\r\n                    });   \r\n                }    \r\n            })\r\n                       \r\n        });\r\n\r\n        setIsLoading(false)\r\n    }\r\n\r\n    const handleChip = (value) => {\r\n        const chips = submenu.slice();\r\n        chips.push(value);\r\n        setSubmenu(chips[chips.length - 1]);\r\n    };\r\n\r\n    const handleEdit = (project) => {\r\n        setIsOpen(!isOpen)\r\n        setNewProjectName(project.name)\r\n        setNewSubM(project.subMenu)\r\n        setChangeProject(project)\r\n    }\r\n\r\n    const handleDelete = (project) => {\r\n        setIsDel(true)\r\n        setChangeProject(project)\r\n    }\r\n\r\n    const handleCloseDel = () => {\r\n        setIsDel(false)\r\n        setChangeProject([])\r\n    }\r\n\r\n    const getProjectPermission = () =>{\r\n        roles.map(permission =>{ \r\n            if (permission.name === userinfo.role){ \r\n                setProjectName(permission.Management.Project)\r\n                \r\n            }\r\n        })\r\n        \r\n    } \r\n    if (projectName.length===0 && user !== null){\r\n        getProjectPermission()\r\n    }\r\n  \r\n    const popupDel = () => {\r\n        return (isDel) ? (\r\n            <div>\r\n                <Modal show={true} onHide={(e)=>{handleCloseDel()}} centered>\r\n                    <Modal.Header>\r\n                        <Modal.Title>Confirm Delete <i onClick={(e) => {handleCloseDel()}} style={{cursor:\"pointer\", marginLeft:\"270px\"}} className='fa fa-times'/></Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        Are you sure to delete this project ?\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={(e) => {\r\n                            handleCloseDel()\r\n                        }}>\r\n                            Cancle\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={(e) =>{\r\n                            deleteProjects()\r\n                        }}>\r\n                            Delete\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        ) : \"\"\r\n    }\r\n\r\n    // Popup of edit\r\n    function popup() {\r\n        return (isOpen) ? (\r\n            <div>\r\n            <Modal show={true} onHide={(e)=>{setIsOpen(!isOpen)}}>\r\n                <Modal.Header>\r\n                <Modal.Title>Edit Project<i onClick={(e) => setIsOpen(!isOpen)} style={{cursor:\"pointer\", marginLeft:\"320px\"}} className='fa fa-times'/></Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                <Form>\r\n                    <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n                    <Form.Label>Project Name</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        value={newProjectName}\r\n                        onChange={(e) => setNewProjectName(e.target.value)}\r\n                        autoFocus\r\n                    />\r\n                    </Form.Group>\r\n                    <Form.Group\r\n                    className=\"mb-3\"\r\n                    controlId=\"exampleForm.ControlTextarea1\"\r\n                    >\r\n                    <ChipInput \r\n                        style={{paddingTop: \"10px\",width: \"100%\",}}\r\n                        defaultValue={newSubM}\r\n                        chips={submenu}\r\n                        onChange={(chips) => handleChip(chips)}                  \r\n                   />\r\n                    </Form.Group>\r\n                </Form>\r\n\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={(e) => setIsOpen(!isOpen)}>\r\n                    Close\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={(e) => editProject(changeProject)}>\r\n                    Save Changes\r\n                </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            </div>\r\n        ) : \"\";\r\n    }\r\n    \r\n    return (\r\n        \r\n        <div className=\"content-wrapper\">\r\n            <Loading isLoading={isLoading} />\r\n            <div className='manage-project'>\r\n                {(role.name === \"Admin\") ? (\r\n                    <form >\r\n                        <div class=\"form-group row\">\r\n                            <div class=\"col-xs-2\">\r\n                                <label for=\"ex1\" style={{paddingBottom: '20px'}}>Project Management</label>\r\n                                <input \r\n                                    class=\"form-control\" \r\n                                    id=\"ex1\" \r\n                                    type=\"text\" \r\n                                    onChange={(event) => {\r\n                                        setProjectInfo({ ...projectInfo, name: event.target.value })\r\n                                    }}\r\n                                    value={projectInfo.name}\r\n                                    placeholder=\" Project Name...\"\r\n                                    \r\n                                />\r\n                            </div>\r\n                            <ChipInput \r\n                                style={{paddingTop: \"10px\",width:\"97.5%\",marginLeft:\"20px\"}}\r\n                                value={submenu}\r\n                                onChange={(chips) => handleChip(chips)}\r\n                                placeholder=\" Submenu...\"\r\n\r\n                            />\r\n                            <button className=\"btn\" type=\"submit\" onClick={(e)=>addProjects(e)} style={{marginTop: \"15px\"}}> Create Project</button> \r\n                        </div>\r\n                    </form>\r\n                ) : \"\"}\r\n                \r\n                {popup()}\r\n                {popupDel()}\r\n                <Table striped bbordered>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Number</th>\r\n                            <th>Project Name</th>\r\n                            <th>Sub Menu</th>\r\n                            <th>Commands</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {projects.filter(project => projectName.includes(project.name)).map((pro,index) => {\r\n                            return (\r\n                                <tr>\r\n                                    <td>{index + 1}</td>\r\n                                    <td>{pro.name}</td>\r\n                                    <td><Stack direction=\"row\" spacing={1}>\r\n                                        {pro.subMenu.map((sub) => {\r\n                                            return(\r\n                                                <Chip label={sub} clickable key={sub}/>\r\n                                            )\r\n                                        })}\r\n                                    </Stack></td>\r\n                                    <td>\r\n                                        <i \r\n                                            class=\"fa fa-trash\" \r\n                                            aria-hidden=\"true\" \r\n                                            style={{cursor: \"pointer\"}}\r\n                                            onClick={(e)=>handleDelete(pro)}\r\n                                        >\r\n                                        </i>\r\n                                        <i \r\n                                            class=\"fa fa-cogs\" \r\n                                            aria-hidden=\"true\" \r\n                                            style={{\r\n                                                cursor: \"pointer\",\r\n                                                marginLeft: \"15px\",\r\n                                            }}\r\n                                            onClick={(e) => handleEdit(pro)}>\r\n\r\n                                        </i>\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                    </tbody>\r\n                </Table>\r\n            </div>         \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ManageProject;\r\n",["77","78"],"C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\Container\\Management\\Permission\\CreatePermissionAdmin.jsx",["79","80","81","82","83","84","85","86"],"C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\Container\\Management\\Permission\\CreatePermissionOthers.jsx",["87","88","89","90","91","92"],"import React, { useState, useEffect } from 'react'\r\nimport {Form, Button}  from 'react-bootstrap';\r\nimport './ManagePermission.css'\r\nimport Select from 'react-select';\r\nimport makeAnimated from 'react-select/animated';\r\nimport { collection, addDoc } from \"firebase/firestore\"; \r\nimport { db, auth } from '../../../Firebase Config/firebase';\r\nimport { useNavigate } from 'react-router'\r\nimport Loading from '../../../components/Loading';\r\nimport { onAuthStateChanged } from 'firebase/auth';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addTask } from '../../../Reducer/firebaseSlice';\r\n\r\nexport default function CreatePermissionOthers() {\r\n\r\n    const navigate = useNavigate();\r\n    const [isLoading, setIsLoading] = useState();\r\n    const dispatch = useDispatch();\r\n\r\n    const currentUserRole = useSelector((state) => state.firebase.currentRoleFS)\r\n    const currentUser = useSelector((state) => state.firebase.currentUserFS)\r\n\r\n    // data to in input to create new permission\r\n    const [roleName, setRoleName] = useState(\"\");\r\n    const [projectInput, setProjectInput] = useState([]);\r\n    const [data, setdata] = useState([]);\r\n    const [options, setOptions] = useState([]);\r\n\r\n    const allProjects = useSelector((state) => state.firebase.allProjects)\r\n    const [toSend, setToSend] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const authentication = onAuthStateChanged(auth,(user) => {\r\n            if (user) {\r\n                navigate('/CreatePermissionOthers')\r\n            } else {\r\n                navigate('/')\r\n           }\r\n        }) \r\n        \r\n        return authentication\r\n    },[])\r\n\r\n    const optionsProject = () => {\r\n        let pName = currentUserRole.project[0].name\r\n        setOptions([{value: pName, label: pName}])\r\n    }\r\n\r\n    const inputToDefault = () => {\r\n        setRoleName(\"\")\r\n        setProjectInput([])\r\n        setdata([])\r\n    }\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        setIsLoading(true)\r\n\r\n        dispatch(addTask(\"Create role\"))\r\n\r\n        var update = [...toSend]\r\n        setToSend(update)\r\n\r\n        if (roleName !== \"\") {\r\n            await addDoc(collection(db, \"roles\"), {\r\n                name: roleName,\r\n                project: toSend,\r\n            });\r\n        }\r\n            \r\n        inputToDefault()\r\n        setIsLoading(false)\r\n    }\r\n\r\n    const animatedComponents = makeAnimated();\r\n\r\n    const handleChange = (event) => {\r\n        setProjectInput(event)\r\n        if (event.length < 1) {\r\n            setToSend([])\r\n        }\r\n    }\r\n\r\n    const subMenuOptions = (event) => {\r\n        var filteredProject = [{name: \"\", options: [{value: \"\", label: \"\"}]}]\r\n        var index = 0\r\n        event.map((inp) => {\r\n            \r\n            allProjects.map((moc) => {\r\n                var option = []\r\n                var indexOption = 0\r\n                // if project in input\r\n                if (inp.value === moc.name) {\r\n                    moc.subMenu?.map((sub) => {\r\n                        option[indexOption] = {value: sub, label: sub}\r\n                        indexOption = indexOption + 1\r\n                    })\r\n                    filteredProject[index] = {name: inp.value, options: option}\r\n                    index = index + 1\r\n                }\r\n            })\r\n        })\r\n        setdata(filteredProject)\r\n    }\r\n\r\n    if (currentUserRole.length !== 0 && options.length < 1) {\r\n        optionsProject()\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className='content-wrapper'>\r\n            <Loading isLoading={isLoading} />\r\n            <div className='CreatePermission'>\r\n                <button className='back-btn' >{'<'} <a onClick={() => {\r\n                    if (currentUser.role === \"Admin\") {\r\n                        navigate(\"/permission\")\r\n                    }else {\r\n                        navigate(\"/permissionOthers\")\r\n                    }\r\n                }}>Back</a></button>\r\n                <div className='create-permission'>\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Permission Name</Form.Label>\r\n                            <Form.Control type=\"text\" value={roleName} placeholder=\"Name\" onChange={(e) => {setRoleName(e.target.value)}} />\r\n                            <Form.Text className=\"text-muted\">\r\n                                Project name have to be prefix.\r\n                            </Form.Text>\r\n                        </Form.Group>\r\n                        \r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Select Projects</Form.Label>\r\n                            <div className=\"mb-3\">\r\n                                <Select\r\n                                    value={projectInput}\r\n                                    closeMenuOnSelect={false}\r\n                                    components={animatedComponents}\r\n                                    isMulti\r\n                                    options={options}\r\n                                    onChange={(event) => {\r\n                                        handleChange(event)\r\n                                        subMenuOptions(event)\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </Form.Group>\r\n                        {(projectInput.length !== 0) ? (\r\n                            <div>\r\n                                {data.map((d, index) => {\r\n                                    return (\r\n                                        <Form.Group key={d.name} className=\"mb-3\">\r\n                                            <Form.Label>Select Sub Menu of {d.name}</Form.Label>\r\n                                            <div className=\"mb-3\">\r\n                                                <Select\r\n                                                    closeMenuOnSelect={false}\r\n                                                    components={animatedComponents}\r\n                                                    isMulti\r\n                                                    options={d.options}\r\n                                                    onChange={(event) => {\r\n                                                        var arrSubMenu = []\r\n                                                        var addSub = [...toSend]\r\n                                                        event.map((e, eIndex) => {\r\n                                                            arrSubMenu[eIndex] = e.value\r\n                                                        })\r\n                                                        addSub[index] = {name: d.name, subMenu: arrSubMenu}\r\n                                                        setToSend(addSub)\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n                                        </Form.Group>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                        ) : \"\"}\r\n                       \r\n                        <Button onClick={(e) => handleSubmit(e)} variant=\"primary\" type=\"submit\">\r\n                            Create\r\n                        </Button>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\reportWebVitals.js",[],"C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\components\\Menu.jsx",["93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111"],"C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\components\\CircleLoader.jsx",[],"C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\Container\\Management\\Permission\\PermissionForAdmin.jsx",["112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137"],"C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\Container\\Management\\Permission\\PermissionForOthers.jsx",["138","139","140","141","142","143","144","145","146","147","148","149","150","151","152"],"import React, { useState, useEffect } from 'react'\r\nimport { Table } from 'react-bootstrap';\r\nimport { useNavigate } from 'react-router'\r\nimport { Modal, Form, Button }  from 'react-bootstrap';\r\nimport Select from 'react-select';\r\nimport makeAnimated from 'react-select/animated';\r\nimport { db, auth } from '../../../Firebase Config/firebase';\r\nimport { doc, deleteDoc, updateDoc } from 'firebase/firestore';\r\nimport Loading from '../../../components/Loading';\r\nimport './ManagePermission.css'\r\nimport { useSelector } from 'react-redux';\r\nimport { onAuthStateChanged } from 'firebase/auth';\r\n\r\nexport default function PermissionForOthers() {\r\n\r\n    const animatedComponents = makeAnimated();\r\n    const navigate = useNavigate();\r\n    const [isLoading, setIsLoading] = useState();\r\n    const [isData, setIsData] = useState(false);\r\n\r\n    const currentUserRole = useSelector((state) => state.firebase.currentRoleFS)\r\n    const allRolesR = useSelector((state) => state.firebase.allRoles)\r\n    const allProjectsR = useSelector((state) => state.firebase.allProjects)\r\n    const allUsersR = useSelector((state) => state.firebase.allUsers)\r\n\r\n    const [allRoles, setAllRoles] = useState([...allRolesR])\r\n    const [allProjects, setAllProjects] = useState([...allProjectsR]);\r\n    const [allUsers, setAllUsers] = useState([...allUsersR]);\r\n    const [rolesInSamePro, setRoleInSamePro] = useState([])\r\n    const [clickedRole, setClickedRole] = useState({}); // store the role user want to add, edit, delete\r\n\r\n    const [isPopup, setIsPopup] = useState(false);\r\n    const [isDel, setIsDel] = useState(false);\r\n\r\n    const [newRoleName, setNewRoleName] = useState(\"\");\r\n\r\n    const [proOptions, setProOptions] = useState({}); // store options to select\r\n\r\n    const [projectInput, setProjectInput] = useState([]); // store project options input that user select ex. [{value: \"\", label: \"\"}]\r\n    const [projectChange, setProjectChange] = useState([]); // store project that will send to firestore\r\n\r\n    useEffect(() => {\r\n        const authentication = onAuthStateChanged(auth,(user) => {\r\n            if (user) {\r\n                navigate('/permissionOthers')\r\n            } else {\r\n                navigate('/')\r\n           }\r\n        }) \r\n        \r\n        return authentication\r\n    },[])\r\n\r\n    // update allRoles when allRoles in redux change\r\n    useEffect(() => {\r\n        setAllRoles([...allRolesR])\r\n    }, [allRolesR])\r\n\r\n    const getSameRolesAgain = async () => {\r\n        let roles = []\r\n        let index = 0\r\n        if (currentUserRole !== undefined) {\r\n            allRoles.map((r) => {\r\n                if (r.name !== \"Admin\" && r?.name?.toLowerCase().includes(currentUserRole.name.split(\"Admin\")[0].toLowerCase())) {\r\n                    roles[index] = r\r\n                    index += 1\r\n                }\r\n            })\r\n            setRoleInSamePro(roles)\r\n        }\r\n\r\n    }\r\n\r\n    if (!isData) {\r\n        setIsData(true)\r\n        getSameRolesAgain()\r\n    }\r\n\r\n    // create options for user select of edit permission\r\n    const genProjectOptions = (project) => {\r\n        let options = []\r\n        project.map((data, index) => {\r\n            options[index] = {value: data.name, label: data.name}\r\n        })\r\n\r\n        return options\r\n    }\r\n\r\n    // call when click btn to close all popup\r\n    const handleClosePopup = () => {\r\n        setIsPopup(false)\r\n        setClickedRole({})\r\n        setNewRoleName(\"\")\r\n        setProOptions({})\r\n        setProjectInput([])\r\n    }\r\n\r\n    const handleCloseDel = () => {\r\n        setIsDel(false)\r\n        setClickedRole([])\r\n    }\r\n\r\n    const handleEditBtn = (role) => {\r\n        let options = genProjectOptions(role.project)\r\n        setIsPopup(true)\r\n        setClickedRole(role)\r\n        setNewRoleName(role.name)\r\n        setProOptions(options)\r\n        setProjectInput(options)\r\n    }\r\n\r\n    const handleDeleteBtn = (role) => {\r\n        setClickedRole(role)\r\n        setIsDel(true)\r\n    }\r\n\r\n    const handleSubmitEdit = async () => {\r\n        setIsLoading(true)\r\n        let update = [...projectChange]\r\n        let sendPro = []\r\n        \r\n        // set value to current\r\n        setProjectChange(update)\r\n        setIsPopup(false)\r\n        // store new value of project to sendPro\r\n        clickedRole.project.map((pro, index) => {\r\n            projectChange.map((proC) => {\r\n                if(pro.name === proC?.name) {\r\n                    sendPro[index] = proC\r\n                } else {\r\n                    sendPro[index] = pro\r\n                }\r\n            })\r\n        })\r\n        \r\n        // update field(name and project) in document roles in firestore\r\n        const docRef = doc(db, \"roles\", clickedRole.id)\r\n        await updateDoc(docRef, {\r\n            \"name\" : newRoleName,\r\n            \"project\" : sendPro\r\n        })\r\n        \r\n        setIsLoading(false)\r\n        // close popup and set all variable to default\r\n        handleClosePopup()\r\n    }\r\n\r\n    const deleteRole = async () => {\r\n        setIsLoading(true)\r\n        \r\n        setIsDel(false)\r\n\r\n        const roleDoc = doc(db, \"roles\", clickedRole.id);\r\n        await deleteDoc(roleDoc);\r\n\r\n        setIsLoading(false)\r\n\r\n        allUsers.map((user) => {\r\n            if (user.role === clickedRole.name) {\r\n                const docRef = doc(db, \"users\", user.id)\r\n                updateDoc(docRef, {\r\n                    \"role\" : \"\",\r\n                })\r\n            }\r\n        })\r\n        \r\n    }\r\n\r\n    const popupDel = () => {\r\n        return (isDel) ? (\r\n            <div>\r\n                <Modal show={true} onHide={(e)=>{handleCloseDel()}} centered>\r\n                    <Modal.Header>\r\n                        <Modal.Title>Confirm Delete <i onClick={(e) => {handleCloseDel()}} style={{cursor:\"pointer\", marginLeft:\"270px\"}} className='fa fa-times'/></Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        Are you sure to delete this permission ?\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={(e) => {\r\n                            handleCloseDel()\r\n                        }}>\r\n                            Cancle\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={(e) =>{\r\n                            deleteRole()\r\n                        }}>\r\n                            Delete\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        ) : \"\"\r\n    }\r\n\r\n    function popupEdit() {\r\n        return (isPopup) ? (\r\n          <div>\r\n            <Modal show={true} onHide={(e)=>{handleClosePopup()}}>\r\n              <Modal.Header>\r\n                <Modal.Title>Edit Permission <i onClick={(e) => handleClosePopup()} style={{cursor:\"pointer\", marginLeft:\"270px\"}} className='fa fa-times'/></Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                <Form>\r\n                    <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                        type=\"text\"\r\n                        placeholder={clickedRole.name} //current role name\r\n                        value={newRoleName}\r\n                        onChange={(e) => {setNewRoleName(e.target.value)}}\r\n                        autoFocus\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\">\r\n                        <Form.Label>Select Projects</Form.Label>\r\n                        <div className=\"mb-3\">\r\n                            <Select\r\n                                defaultValue={proOptions}\r\n                                closeMenuOnSelect={true}\r\n                                components={animatedComponents}\r\n                                isMulti\r\n                                options={proOptions}\r\n                                onChange={(event) => {\r\n                                    setProjectInput(event)\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </Form.Group>\r\n\r\n                    {(projectInput.length > 0) ? (\r\n                        <div>\r\n                            {projectInput.map((pro, index) => {\r\n                                let subOptions = []\r\n                                let defOptions = []\r\n                                \r\n                                let projectName = \"\"\r\n                                // Set subMenu in allProjects to format => {value: \"\", label: \"\"} and keep at subOptions\r\n                                allProjects.map((p) => {\r\n                                    if (pro.value === p.name) {\r\n                                        p.subMenu.map((subM, subMIndex) => {\r\n                                            subOptions[subMIndex] = {value: subM, label: subM}\r\n                                        })\r\n                                    }\r\n                                })\r\n\r\n                                // Set subMenu in clickedRole(value form edit btn) to format => {value: \"\", label: \"\"} and keep at defOptions\r\n                                clickedRole.project.map((p) => {\r\n                                    if (p.name === pro.value) {\r\n                                        p.subMenu.map((subM, subMIndex) => {\r\n                                            defOptions[subMIndex] = {value: subM, label: subM}\r\n                                        })\r\n                                    }\r\n                                })\r\n\r\n                                return (\r\n                                    <Form.Group className=\"mb-3\">\r\n                                    <Form.Label>{pro.label}</Form.Label>\r\n                                    <div className=\"mb-3\">\r\n                                        <Select\r\n                                            defaultValue={defOptions}\r\n                                            closeMenuOnSelect={true}\r\n                                            components={animatedComponents}\r\n                                            isMulti\r\n                                            options={subOptions}\r\n                                            onChange={(event) => {\r\n                                                var arrSubMenu = []\r\n                                                var addSub = [...projectChange]\r\n                                                event.map((e, eIndex) => {\r\n                                                    arrSubMenu[eIndex] = e.value\r\n                                                })\r\n                                                addSub[index] = {name: pro.value, subMenu: arrSubMenu}\r\n                                                setProjectChange(addSub)\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                </Form.Group>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                        \r\n                    ) : \"\"}\r\n                </Form>\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={(e) => {handleClosePopup()}}>\r\n                  Close\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={(e) =>{handleSubmitEdit()}}>\r\n                  Save Changes\r\n                </Button>\r\n              </Modal.Footer>\r\n            </Modal>\r\n          </div>\r\n        ) : \"\";\r\n      }\r\n\r\n    return (\r\n        <div className='content-wrapper'>\r\n            <Loading isLoading={isLoading} />\r\n            {popupEdit()}\r\n            {popupDel()}\r\n            <div className='permission'>\r\n                <div className='top'>\r\n                    <h2 className='topic'>Permission</h2>\r\n                    <div className='create'>\r\n                        <button className=\"create-btn\" ><a onClick={() => navigate('/CreatePermissionOthers')}>Create New Permission</a></button>\r\n                    </div>\r\n                </div>\r\n                <Table striped bbordered>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Number</th>\r\n                            <th>Role Name</th>\r\n                            <th>Projects {'('}Sub Menu{')'}</th>\r\n                            <th>Commands</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {rolesInSamePro?.map((role,index) => {\r\n                            return (\r\n                                <tr>\r\n                                    <td>{index + 1}</td>\r\n                                    <td>{role.name}</td>\r\n                                    <td>{role?.project.map((project) => {\r\n                                        return <div>{project.name} {'('}{project.subMenu.map((sub, subIndex) => {\r\n                                            if (subIndex > 0) {\r\n                                                return `, ${sub}`\r\n                                            } else {\r\n                                                return ` ${sub}`\r\n                                            }\r\n                                        })} {')'}</div>\r\n                                    })}\r\n                                    </td>\r\n                                    <td>\r\n                                        <Button className=\"btn m-2 edit\" onClick={(e) => {handleEditBtn(role)}}>Edit</Button>\r\n                                        <button className=\"m-2 del\" onClick={(e) => {handleDeleteBtn(role)}}>Delete</button>\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\index.js",[],"C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\Container\\Login\\login.jsx",["153","154","155"],"C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\Container\\Management\\ManageUser.jsx",["156","157"],"C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\components\\Loading.jsx",[],"C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\Container\\Projects\\BTSQR\\containers\\Monitors\\Bts_Search.jsx",["158","159"],"C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\Container\\Projects\\Datafile Morniting\\ShowTable.js",["160","161","162"],"C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\Container\\Projects\\Rabbit SmartWatch\\containers\\Monitors\\Smartwatch_Search.jsx",["163","164","165","166","167"],{"ruleId":"168","severity":1,"message":"169","line":12,"column":19,"nodeType":"170","messageId":"171","endLine":12,"endColumn":36},{"ruleId":"168","severity":1,"message":"172","line":12,"column":38,"nodeType":"170","messageId":"171","endLine":12,"endColumn":52},{"ruleId":"168","severity":1,"message":"173","line":21,"column":5,"nodeType":"170","messageId":"171","endLine":21,"endColumn":15},{"ruleId":"174","severity":1,"message":"175","line":68,"column":7,"nodeType":"176","endLine":68,"endColumn":9,"suggestions":"177"},{"ruleId":"178","severity":1,"message":"179","line":111,"column":26,"nodeType":"180","messageId":"181","endLine":111,"endColumn":28},{"ruleId":"178","severity":1,"message":"179","line":134,"column":41,"nodeType":"180","messageId":"181","endLine":134,"endColumn":43},{"ruleId":"178","severity":1,"message":"179","line":152,"column":26,"nodeType":"180","messageId":"181","endLine":152,"endColumn":28},{"ruleId":"178","severity":1,"message":"179","line":154,"column":41,"nodeType":"180","messageId":"181","endLine":154,"endColumn":43},{"ruleId":"178","severity":1,"message":"179","line":182,"column":26,"nodeType":"180","messageId":"181","endLine":182,"endColumn":28},{"ruleId":"178","severity":1,"message":"179","line":184,"column":38,"nodeType":"180","messageId":"181","endLine":184,"endColumn":40},{"ruleId":"178","severity":1,"message":"179","line":230,"column":30,"nodeType":"180","messageId":"181","endLine":230,"endColumn":32},{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","replacedBy":"185"},{"ruleId":"174","severity":1,"message":"175","line":38,"column":7,"nodeType":"176","endLine":38,"endColumn":9,"suggestions":"186"},{"ruleId":"178","severity":1,"message":"179","line":44,"column":31,"nodeType":"180","messageId":"181","endLine":44,"endColumn":33},{"ruleId":"178","severity":1,"message":"179","line":54,"column":32,"nodeType":"180","messageId":"181","endLine":54,"endColumn":34},{"ruleId":"178","severity":1,"message":"179","line":112,"column":25,"nodeType":"180","messageId":"181","endLine":112,"endColumn":27},{"ruleId":"178","severity":1,"message":"179","line":114,"column":37,"nodeType":"180","messageId":"181","endLine":114,"endColumn":39},{"ruleId":"178","severity":1,"message":"179","line":119,"column":44,"nodeType":"180","messageId":"181","endLine":119,"endColumn":46},{"ruleId":"187","severity":1,"message":"188","line":135,"column":53,"nodeType":"189","endLine":135,"endColumn":96},{"ruleId":"178","severity":1,"message":"179","line":177,"column":79,"nodeType":"180","messageId":"181","endLine":177,"endColumn":81},{"ruleId":"174","severity":1,"message":"175","line":42,"column":7,"nodeType":"176","endLine":42,"endColumn":9,"suggestions":"190"},{"ruleId":"178","severity":1,"message":"179","line":87,"column":25,"nodeType":"180","messageId":"181","endLine":87,"endColumn":27},{"ruleId":"178","severity":1,"message":"179","line":89,"column":35,"nodeType":"180","messageId":"181","endLine":89,"endColumn":37},{"ruleId":"178","severity":1,"message":"179","line":94,"column":44,"nodeType":"180","messageId":"181","endLine":94,"endColumn":46},{"ruleId":"187","severity":1,"message":"188","line":115,"column":53,"nodeType":"189","endLine":121,"endColumn":20},{"ruleId":"178","severity":1,"message":"179","line":163,"column":79,"nodeType":"180","messageId":"181","endLine":163,"endColumn":81},{"ruleId":"168","severity":1,"message":"191","line":12,"column":16,"nodeType":"170","messageId":"171","endLine":12,"endColumn":23},{"ruleId":"178","severity":1,"message":"179","line":26,"column":29,"nodeType":"180","messageId":"181","endLine":26,"endColumn":31},{"ruleId":"168","severity":1,"message":"192","line":41,"column":9,"nodeType":"170","messageId":"171","endLine":41,"endColumn":10},{"ruleId":"178","severity":1,"message":"179","line":43,"column":29,"nodeType":"180","messageId":"181","endLine":43,"endColumn":31},{"ruleId":"168","severity":1,"message":"193","line":52,"column":9,"nodeType":"170","messageId":"171","endLine":52,"endColumn":13},{"ruleId":"187","severity":1,"message":"188","line":58,"column":9,"nodeType":"189","endLine":58,"endColumn":121},{"ruleId":"187","severity":1,"message":"188","line":94,"column":17,"nodeType":"189","endLine":94,"endColumn":41},{"ruleId":"187","severity":1,"message":"194","line":101,"column":17,"nodeType":"189","endLine":101,"endColumn":50},{"ruleId":"187","severity":1,"message":"188","line":110,"column":21,"nodeType":"189","endLine":110,"endColumn":120},{"ruleId":"187","severity":1,"message":"188","line":120,"column":21,"nodeType":"189","endLine":120,"endColumn":117},{"ruleId":"187","severity":1,"message":"188","line":131,"column":21,"nodeType":"189","endLine":135,"endColumn":74},{"ruleId":"187","severity":1,"message":"194","line":146,"column":21,"nodeType":"189","endLine":146,"endColumn":54},{"ruleId":"187","severity":1,"message":"194","line":166,"column":17,"nodeType":"189","endLine":166,"endColumn":50},{"ruleId":"187","severity":1,"message":"194","line":187,"column":23,"nodeType":"189","endLine":187,"endColumn":56},{"ruleId":"187","severity":1,"message":"188","line":201,"column":45,"nodeType":"189","endLine":201,"endColumn":151},{"ruleId":"187","severity":1,"message":"194","line":222,"column":17,"nodeType":"189","endLine":222,"endColumn":50},{"ruleId":"187","severity":1,"message":"194","line":231,"column":21,"nodeType":"189","endLine":231,"endColumn":54},{"ruleId":"187","severity":1,"message":"194","line":240,"column":25,"nodeType":"189","endLine":240,"endColumn":58},{"ruleId":"187","severity":1,"message":"194","line":246,"column":25,"nodeType":"189","endLine":246,"endColumn":58},{"ruleId":"168","severity":1,"message":"195","line":29,"column":25,"nodeType":"170","messageId":"171","endLine":29,"endColumn":39},{"ruleId":"168","severity":1,"message":"196","line":30,"column":22,"nodeType":"170","messageId":"171","endLine":30,"endColumn":33},{"ruleId":"168","severity":1,"message":"197","line":45,"column":12,"nodeType":"170","messageId":"171","endLine":45,"endColumn":19},{"ruleId":"168","severity":1,"message":"198","line":45,"column":21,"nodeType":"170","messageId":"171","endLine":45,"endColumn":31},{"ruleId":"174","severity":1,"message":"175","line":57,"column":7,"nodeType":"176","endLine":57,"endColumn":9,"suggestions":"199"},{"ruleId":"178","severity":1,"message":"179","line":76,"column":35,"nodeType":"180","messageId":"181","endLine":76,"endColumn":37},{"ruleId":"178","severity":1,"message":"179","line":87,"column":31,"nodeType":"180","messageId":"181","endLine":87,"endColumn":33},{"ruleId":"178","severity":1,"message":"179","line":89,"column":42,"nodeType":"180","messageId":"181","endLine":89,"endColumn":44},{"ruleId":"178","severity":1,"message":"179","line":138,"column":46,"nodeType":"180","messageId":"181","endLine":138,"endColumn":48},{"ruleId":"178","severity":1,"message":"179","line":140,"column":49,"nodeType":"180","messageId":"181","endLine":140,"endColumn":51},{"ruleId":"178","severity":1,"message":"179","line":146,"column":26,"nodeType":"180","messageId":"181","endLine":146,"endColumn":28},{"ruleId":"178","severity":1,"message":"179","line":176,"column":46,"nodeType":"180","messageId":"181","endLine":176,"endColumn":48},{"ruleId":"178","severity":1,"message":"179","line":177,"column":38,"nodeType":"180","messageId":"181","endLine":177,"endColumn":40},{"ruleId":"178","severity":1,"message":"179","line":187,"column":26,"nodeType":"180","messageId":"181","endLine":187,"endColumn":28},{"ruleId":"178","severity":1,"message":"179","line":255,"column":26,"nodeType":"180","messageId":"181","endLine":255,"endColumn":28},{"ruleId":"178","severity":1,"message":"179","line":267,"column":29,"nodeType":"180","messageId":"181","endLine":267,"endColumn":31},{"ruleId":"178","severity":1,"message":"179","line":318,"column":63,"nodeType":"180","messageId":"181","endLine":318,"endColumn":65},{"ruleId":"178","severity":1,"message":"179","line":320,"column":81,"nodeType":"180","messageId":"181","endLine":320,"endColumn":83},{"ruleId":"178","severity":1,"message":"179","line":337,"column":83,"nodeType":"180","messageId":"181","endLine":337,"endColumn":85},{"ruleId":"168","severity":1,"message":"200","line":408,"column":37,"nodeType":"170","messageId":"171","endLine":408,"endColumn":48},{"ruleId":"178","severity":1,"message":"179","line":410,"column":53,"nodeType":"180","messageId":"181","endLine":410,"endColumn":55},{"ruleId":"178","severity":1,"message":"179","line":412,"column":73,"nodeType":"180","messageId":"181","endLine":412,"endColumn":75},{"ruleId":"178","severity":1,"message":"179","line":419,"column":61,"nodeType":"180","messageId":"181","endLine":419,"endColumn":63},{"ruleId":"178","severity":1,"message":"179","line":421,"column":73,"nodeType":"180","messageId":"181","endLine":421,"endColumn":75},{"ruleId":"178","severity":1,"message":"179","line":440,"column":71,"nodeType":"180","messageId":"181","endLine":440,"endColumn":73},{"ruleId":"187","severity":1,"message":"188","line":479,"column":57,"nodeType":"189","endLine":479,"endColumn":111},{"ruleId":"168","severity":1,"message":"195","line":27,"column":25,"nodeType":"170","messageId":"171","endLine":27,"endColumn":39},{"ruleId":"168","severity":1,"message":"196","line":28,"column":22,"nodeType":"170","messageId":"171","endLine":28,"endColumn":33},{"ruleId":"174","severity":1,"message":"175","line":52,"column":7,"nodeType":"176","endLine":52,"endColumn":9,"suggestions":"201"},{"ruleId":"178","severity":1,"message":"179","line":63,"column":30,"nodeType":"180","messageId":"181","endLine":63,"endColumn":32},{"ruleId":"178","severity":1,"message":"179","line":82,"column":35,"nodeType":"180","messageId":"181","endLine":82,"endColumn":37},{"ruleId":"178","severity":1,"message":"179","line":126,"column":46,"nodeType":"180","messageId":"181","endLine":126,"endColumn":48},{"ruleId":"178","severity":1,"message":"179","line":127,"column":38,"nodeType":"180","messageId":"181","endLine":127,"endColumn":40},{"ruleId":"178","severity":1,"message":"179","line":158,"column":29,"nodeType":"180","messageId":"181","endLine":158,"endColumn":31},{"ruleId":"168","severity":1,"message":"200","line":238,"column":37,"nodeType":"170","messageId":"171","endLine":238,"endColumn":48},{"ruleId":"178","severity":1,"message":"179","line":240,"column":53,"nodeType":"180","messageId":"181","endLine":240,"endColumn":55},{"ruleId":"178","severity":1,"message":"179","line":242,"column":73,"nodeType":"180","messageId":"181","endLine":242,"endColumn":75},{"ruleId":"178","severity":1,"message":"179","line":249,"column":61,"nodeType":"180","messageId":"181","endLine":249,"endColumn":63},{"ruleId":"178","severity":1,"message":"179","line":251,"column":73,"nodeType":"180","messageId":"181","endLine":251,"endColumn":75},{"ruleId":"178","severity":1,"message":"179","line":270,"column":71,"nodeType":"180","messageId":"181","endLine":270,"endColumn":73},{"ruleId":"187","severity":1,"message":"188","line":308,"column":57,"nodeType":"189","endLine":308,"endColumn":112},{"ruleId":"168","severity":1,"message":"202","line":65,"column":13,"nodeType":"170","messageId":"171","endLine":65,"endColumn":17},{"ruleId":"178","severity":1,"message":"179","line":67,"column":34,"nodeType":"180","messageId":"181","endLine":67,"endColumn":36},{"ruleId":"168","severity":1,"message":"193","line":145,"column":11,"nodeType":"170","messageId":"171","endLine":145,"endColumn":15},{"ruleId":"174","severity":1,"message":"203","line":98,"column":5,"nodeType":"176","endLine":98,"endColumn":7,"suggestions":"204"},{"ruleId":"178","severity":1,"message":"179","line":138,"column":26,"nodeType":"180","messageId":"181","endLine":138,"endColumn":28},{"ruleId":"174","severity":1,"message":"175","line":54,"column":7,"nodeType":"176","endLine":54,"endColumn":9,"suggestions":"205"},{"ruleId":"206","severity":1,"message":"207","line":217,"column":21,"nodeType":"189","endLine":217,"endColumn":125},{"ruleId":"168","severity":1,"message":"208","line":1,"column":17,"nodeType":"170","messageId":"171","endLine":1,"endColumn":26},{"ruleId":"168","severity":1,"message":"209","line":1,"column":28,"nodeType":"170","messageId":"171","endLine":1,"endColumn":36},{"ruleId":"168","severity":1,"message":"210","line":10,"column":10,"nodeType":"170","messageId":"171","endLine":10,"endColumn":22},{"ruleId":"168","severity":1,"message":"211","line":22,"column":12,"nodeType":"170","messageId":"171","endLine":22,"endColumn":18},{"ruleId":"168","severity":1,"message":"212","line":27,"column":12,"nodeType":"170","messageId":"171","endLine":27,"endColumn":23},{"ruleId":"174","severity":1,"message":"213","line":44,"column":8,"nodeType":"176","endLine":44,"endColumn":18,"suggestions":"214"},{"ruleId":"168","severity":1,"message":"215","line":213,"column":11,"nodeType":"170","messageId":"171","endLine":213,"endColumn":22},{"ruleId":"216","severity":1,"message":"217","line":230,"column":263,"nodeType":"218","messageId":"219","endLine":230,"endColumn":268},"no-unused-vars","'defindAllProjects' is defined but never used.","Identifier","unusedVar","'defindAllRoles' is defined but never used.","'onSnapshot' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["220"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-native-reassign",["221"],"no-negated-in-lhs",["222"],["223"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["224"],"'setRole' is assigned a value but never used.","'i' is assigned a value but never used.","'user' is assigned a value but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'setAllProjects' is assigned a value but never used.","'setAllUsers' is assigned a value but never used.","'roleDel' is assigned a value but never used.","'setRoleDel' is assigned a value but never used.",["225"],"'projectName' is assigned a value but never used.",["226"],"'data' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'router'. Either include it or remove the dependency array.",["227"],["228"],"react/jsx-pascal-case","Imported JSX component Date_range_picker must be in PascalCase or SCREAMING_SNAKE_CASE","'useEffect' is defined but never used.","'useState' is defined but never used.","'NoEncryption' is defined but never used.","'noData' is assigned a value but never used.","'currentpage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'handleSearch'. Either include it or remove the dependency array.",["229"],"'handleClick' is assigned a value but never used.","no-dupe-keys","Duplicate key 'width'.","ObjectExpression","unexpected",{"desc":"230","fix":"231"},"no-global-assign","no-unsafe-negation",{"desc":"230","fix":"232"},{"desc":"230","fix":"233"},{"desc":"230","fix":"234"},{"desc":"230","fix":"235"},{"desc":"236","fix":"237"},{"desc":"230","fix":"238"},{"desc":"239","fix":"240"},"Update the dependencies array to be: [navigate]",{"range":"241","text":"242"},{"range":"243","text":"242"},{"range":"244","text":"242"},{"range":"245","text":"242"},{"range":"246","text":"242"},"Update the dependencies array to be: [router]",{"range":"247","text":"248"},{"range":"249","text":"242"},"Update the dependencies array to be: [checkbox, handleSearch]",{"range":"250","text":"251"},[2300,2302],"[navigate]",[1410,1412],[1627,1629],[2356,2358],[2281,2283],[3073,3075],"[router]",[1996,1998],[1569,1579],"[checkbox, handleSearch]"]