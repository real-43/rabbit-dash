[{"C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\Container\\Management\\ManageProject.jsx":"1","C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\Container\\Management\\Permission\\CreatePermissionAdmin.jsx":"2","C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\Container\\Management\\Permission\\CreatePermissionOthers.jsx":"3","C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\reportWebVitals.js":"4","C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\components\\Menu.jsx":"5","C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\components\\CircleLoader.jsx":"6","C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\Container\\Management\\Permission\\PermissionForAdmin.jsx":"7","C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\Container\\Management\\Permission\\PermissionForOthers.jsx":"8","C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\index.js":"9","C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\Container\\Login\\login.jsx":"10","C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\Container\\Management\\ManageUser.jsx":"11","C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\components\\Loading.jsx":"12","C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\Container\\Projects\\Datafile Morniting\\ShowTable.js":"13","C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\Container\\Projects\\Rabbit SmartWatch\\containers\\Monitors\\Smartwatch_Search.jsx":"14","C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\Container\\Home\\Dashboard.jsx":"15","C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\Container\\Projects\\Datafile Morniting\\PDF.jsx":"16","C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\Container\\Projects\\Datafile Morniting\\Home.jsx":"17","C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\Container\\Projects\\Datafile Morniting\\TableContainer.jsx":"18","C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\store.js":"19","C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\Container\\Projects\\BTSQR\\Frontend\\containers\\Monitors\\Bts_Search.jsx":"20","C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\Container\\Projects\\BTSQR\\Frontend\\containers\\Home.js":"21"},{"size":14311,"mtime":1657163237372,"results":"22","hashOfConfig":"23"},{"size":7944,"mtime":1657083273701,"results":"24","hashOfConfig":"23"},{"size":7489,"mtime":1657081928404,"results":"25","hashOfConfig":"23"},{"size":375,"mtime":1654849381296,"results":"26","hashOfConfig":"23"},{"size":14132,"mtime":1657082472285,"results":"27","hashOfConfig":"23"},{"size":778,"mtime":1655265204826,"results":"28","hashOfConfig":"23"},{"size":21189,"mtime":1657162338782,"results":"29","hashOfConfig":"23"},{"size":14085,"mtime":1657162651449,"results":"30","hashOfConfig":"23"},{"size":1005,"mtime":1656554588044,"results":"31","hashOfConfig":"23"},{"size":7399,"mtime":1657159953748,"results":"32","hashOfConfig":"23"},{"size":12710,"mtime":1657180918106,"results":"33","hashOfConfig":"23"},{"size":363,"mtime":1657083515987,"results":"34","hashOfConfig":"23"},{"size":2465,"mtime":1657184584836,"results":"35","hashOfConfig":"23"},{"size":11862,"mtime":1657180328871,"results":"36","hashOfConfig":"23"},{"size":39034,"mtime":1657084421311,"results":"37","hashOfConfig":"23"},{"size":700,"mtime":1657184448890,"results":"38","hashOfConfig":"23"},{"size":2173,"mtime":1657184814183,"results":"39","hashOfConfig":"23"},{"size":6302,"mtime":1657184668320,"results":"40","hashOfConfig":"23"},{"size":813,"mtime":1656991779885,"results":"41","hashOfConfig":"23"},{"size":17231,"mtime":1657188142501,"results":"42","hashOfConfig":"23"},{"size":1245,"mtime":1657188124117,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},"1hbko9z",{"filePath":"48","messages":"49","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"53"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\Container\\Management\\ManageProject.jsx",["93","94","95","96","97","98","99","100","101","102","103"],"import React, { useState, useEffect }from 'react';\r\nimport { db } from '../../Firebase Config/firebaseSec';\r\nimport { auth } from '../../Firebase Config/firebase';\r\nimport { Table } from 'react-bootstrap';\r\nimport { Modal, Form, Button }  from 'react-bootstrap';\r\nimport \"./signup.css\";\r\nimport Chip from '@mui/material/Chip';\r\nimport Stack from '@mui/material/Stack';\r\nimport ChipInput from 'material-ui-chip-input'\r\nimport Loading from '../../components/Loading';\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { addTask, defindAllProjects, defindAllRoles } from '../../Reducer/firebaseSlice';\r\nimport {\r\n    collection,\r\n    addDoc,\r\n    deleteDoc,\r\n    updateDoc,\r\n    doc,\r\n    arrayUnion,\r\n    arrayRemove,\r\n    onSnapshot\r\n  } from \"firebase/firestore\";\r\nimport { useNavigate } from 'react-router';\r\nimport { onAuthStateChanged } from 'firebase/auth';\r\n\r\nconst ManageProject = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n    const user = auth.currentUser\r\n    \r\n    const [newProjectName,setNewProjectName] = useState(\"\")\r\n    const [newSubM,setNewSubM] = useState([])\r\n    const [changeProject,setChangeProject] = useState(null)\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [isDel, setIsDel] = useState(false)\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    //handle input \r\n    const [projectInfo, setProjectInfo] = useState({ name: ''});\r\n    const [submenu, setSubmenu] = useState([])\r\n\r\n    const [projectName,setProjectName] =  useState([])\r\n    \r\n    const projectsR = useSelector((state)=> state.firebase.allProjects)\r\n    const rolesR = useSelector((state) => state.firebase.allRoles)\r\n\r\n    const [projects, setProjects] = useState([...projectsR]);\r\n\r\n    const [roles, setRoles] = useState([...rolesR]);\r\n    const roleR = useSelector((state) => state.firebase.currentRoleFS)\r\n    const [role, setRole] = useState(roleR);\r\n\r\n    const AdminDoc = doc(db, \"roles\", 'XKvFX3M9e07w0qcpxd32');\r\n\r\n    const userinfo = useSelector((state) => state.firebase.currentUserFS)\r\n\r\n    useEffect(() => {\r\n        const authentication = onAuthStateChanged(auth,(user) => {\r\n            if (!user) {\r\n                navigate('/')\r\n            }\r\n        }) \r\n        \r\n        return authentication\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        setRoles([...rolesR])\r\n    }, [rolesR])\r\n\r\n    useEffect(() => {\r\n        setProjects([...projectsR])\r\n    }, [projectsR])\r\n\r\n    useEffect(() => {\r\n        setRole(roleR)\r\n    }, [roleR])\r\n\r\n    const addProjects = async (e) => {\r\n        e.preventDefault();\r\n        setIsLoading(true)\r\n\r\n        dispatch(addTask(\"Add project\"))\r\n\r\n        // let rest = [...projects]\r\n        // rest.push({name: projectInfo.name, subMenu: submenu[submenu.length-1]})\r\n\r\n        // setProjects(rest) \r\n\r\n        var a = []\r\n        for (const element of role.Management.Project) {\r\n            a.push(element);\r\n        }\r\n        a.push(projectInfo.name)\r\n\r\n        var NewProjectManagement = {\r\n            \"Project\": a,\r\n            \"Permission\": a,\r\n            \"Services\": a\r\n        }\r\n        \r\n        var NewProject = {\r\n            name: projectInfo.name,\r\n            subMenu: submenu,\r\n        }\r\n\r\n        await addDoc(collection(db, \"projects\"), NewProject);\r\n        roles.map((role) => { \r\n            if(role.name === 'Admin'){\r\n                updateDoc(AdminDoc,{\r\n                    project: arrayUnion(NewProject),\r\n                    Management: NewProjectManagement\r\n                });\r\n            }   \r\n        });\r\n\r\n        setProjectInfo({ ...projectInfo, name: \"\" })\r\n        setSubmenu([])\r\n        setIsLoading(false)\r\n    }\r\n\r\n    const deleteProjects = async () => {\r\n        const userDoc = doc(db, \"projects\", changeProject.id);\r\n        setIsLoading(true)\r\n\r\n        setIsDel(false)\r\n\r\n        dispatch(addTask(\"Delete project\"))\r\n\r\n        let rest = []\r\n        role.Management.Project.map((p) => {\r\n            if (p !== changeProject.name) {\r\n                rest.push(p)\r\n            }\r\n        })\r\n        setRole({...role, Management: {Permission: rest, Project: rest, Services: rest}})\r\n\r\n        var DelProjectManagement = {\r\n            Project: role.Management.Project.filter(obj => obj !== changeProject.name),\r\n            Permission: role.Management.Permission.filter(obj => obj !== changeProject.name),\r\n            Services: role.Management.Services.filter(obj => obj !== changeProject.name)\r\n\r\n        }\r\n        var DelProjectDetails = {\r\n            name: changeProject.name,\r\n            subMenu: changeProject.subMenu\r\n        }\r\n        await deleteDoc(userDoc);\r\n        roles.map((role) =>{ \r\n            const roleDoc = doc(db, \"roles\", role.id)\r\n            role.project?.map((submenu) =>{\r\n                if(submenu.name === changeProject.name){\r\n                    updateDoc(roleDoc,{\r\n                        project: arrayRemove(DelProjectDetails),\r\n                        Management:DelProjectManagement\r\n                    });\r\n                }      \r\n            })\r\n        }); \r\n        \r\n        handleCloseDel()\r\n        setIsLoading(false)\r\n    }\r\n\r\n    const editProject = async (project) =>{\r\n\r\n        setIsLoading(true)\r\n\r\n        dispatch(addTask(\"Edit project\"))\r\n\r\n        setIsOpen(!isOpen)\r\n        const projectDoc = doc(db, \"projects\", project.id);\r\n    \r\n        await updateDoc(projectDoc, {\r\n            \"name\": newProjectName,\r\n            \"subMenu\": submenu\r\n        });\r\n\r\n        roles.map((role) =>{ \r\n            const roleDoc = doc(db, \"roles\", role.id)\r\n            role.project?.map((proJ) =>{\r\n                if(proJ.name === project.name){\r\n                    updateDoc(roleDoc,{\r\n                        project: arrayRemove({\r\n                            name: project.name,\r\n                            subMenu: project.subMenu\r\n                        }),\r\n                    });  \r\n                    updateDoc(roleDoc,{\r\n                        project: arrayUnion({\r\n                            name: newProjectName,\r\n                            subMenu: submenu\r\n                        })\r\n                    });   \r\n                }    \r\n            })\r\n                       \r\n        });\r\n\r\n        setIsLoading(false)\r\n    }\r\n\r\n    const handleChip = (value) => {\r\n        const chips = submenu.slice();\r\n        chips.push(value);\r\n        setSubmenu(chips[chips.length - 1]);\r\n    };\r\n\r\n    const handleEdit = (project) => {\r\n        setIsOpen(!isOpen)\r\n        setNewProjectName(project.name)\r\n        setNewSubM(project.subMenu)\r\n        setChangeProject(project)\r\n    }\r\n\r\n    const handleDelete = (project) => {\r\n        setIsDel(true)\r\n        setChangeProject(project)\r\n    }\r\n\r\n    const handleCloseDel = () => {\r\n        setIsDel(false)\r\n        setChangeProject([])\r\n    }\r\n\r\n    const getProjectPermission = () =>{\r\n        roles.map(permission =>{ \r\n            if (permission.name === userinfo.role){ \r\n                setProjectName(permission.Management.Project)\r\n                \r\n            }\r\n        })\r\n        \r\n    } \r\n    if (projectName.length===0 && user !== null){\r\n        getProjectPermission()\r\n    }\r\n  \r\n    const popupDel = () => {\r\n        return (isDel) ? (\r\n            <div>\r\n                <Modal show={true} onHide={(e)=>{handleCloseDel()}} centered>\r\n                    <Modal.Header>\r\n                        <Modal.Title>Confirm Delete <i onClick={(e) => {handleCloseDel()}} style={{cursor:\"pointer\", marginLeft:\"270px\"}} className='fa fa-times'/></Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        Are you sure to delete this project ?\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={(e) => {\r\n                            handleCloseDel()\r\n                        }}>\r\n                            Cancle\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={(e) =>{\r\n                            deleteProjects()\r\n                        }}>\r\n                            Delete\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        ) : \"\"\r\n    }\r\n\r\n    // Popup of edit\r\n    function popup() {\r\n        return (isOpen) ? (\r\n            <div>\r\n            <Modal show={true} onHide={(e)=>{setIsOpen(!isOpen)}}>\r\n                <Modal.Header>\r\n                <Modal.Title>Edit Project<i onClick={(e) => setIsOpen(!isOpen)} style={{cursor:\"pointer\", marginLeft:\"320px\"}} className='fa fa-times'/></Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                <Form>\r\n                    <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n                    <Form.Label>Project Name</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        value={newProjectName}\r\n                        onChange={(e) => setNewProjectName(e.target.value)}\r\n                        autoFocus\r\n                    />\r\n                    </Form.Group>\r\n                    <Form.Group\r\n                    className=\"mb-3\"\r\n                    controlId=\"exampleForm.ControlTextarea1\"\r\n                    >\r\n                    <ChipInput \r\n                        style={{paddingTop: \"10px\",width: \"100%\",}}\r\n                        defaultValue={newSubM}\r\n                        chips={submenu}\r\n                        onChange={(chips) => handleChip(chips)}                  \r\n                   />\r\n                    </Form.Group>\r\n                </Form>\r\n\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={(e) => setIsOpen(!isOpen)}>\r\n                    Close\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={(e) => editProject(changeProject)}>\r\n                    Save Changes\r\n                </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            </div>\r\n        ) : \"\";\r\n    }\r\n    \r\n    return (\r\n        \r\n        <div className=\"content-wrapper\">\r\n            <Loading isLoading={isLoading} />\r\n            <div className='manage-project'>\r\n                {(role.name === \"Admin\") ? (\r\n                    <form >\r\n                        <div class=\"form-group row\">\r\n                            <div class=\"col-xs-2\">\r\n                                <label for=\"ex1\" style={{paddingBottom: '20px'}}>Project Management</label>\r\n                                <input \r\n                                    class=\"form-control\" \r\n                                    id=\"ex1\" \r\n                                    type=\"text\" \r\n                                    onChange={(event) => {\r\n                                        setProjectInfo({ ...projectInfo, name: event.target.value })\r\n                                    }}\r\n                                    value={projectInfo.name}\r\n                                    placeholder=\" Project Name...\"\r\n                                    \r\n                                />\r\n                            </div>\r\n                            <ChipInput \r\n                                style={{paddingTop: \"10px\",width:\"97.5%\",marginLeft:\"20px\"}}\r\n                                value={submenu}\r\n                                onChange={(chips) => handleChip(chips)}\r\n                                placeholder=\" Submenu...\"\r\n\r\n                            />\r\n                            <button className=\"btn\" type=\"submit\" onClick={(e)=>addProjects(e)} style={{marginTop: \"15px\"}}> Create Project</button> \r\n                        </div>\r\n                    </form>\r\n                ) : \"\"}\r\n                \r\n                {popup()}\r\n                {popupDel()}\r\n                <Table striped bbordered>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Number</th>\r\n                            <th>Project Name</th>\r\n                            <th>Sub Menu</th>\r\n                            <th>Commands</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {projects.filter(project => projectName.includes(project.name)).map((pro,index) => {\r\n                            return (\r\n                                <tr>\r\n                                    <td>{index + 1}</td>\r\n                                    <td>{pro.name}</td>\r\n                                    <td><Stack direction=\"row\" spacing={1}>\r\n                                        {pro.subMenu.map((sub) => {\r\n                                            return(\r\n                                                <Chip label={sub} clickable key={sub}/>\r\n                                            )\r\n                                        })}\r\n                                    </Stack></td>\r\n                                    <td>\r\n                                        <i \r\n                                            class=\"fa fa-trash\" \r\n                                            aria-hidden=\"true\" \r\n                                            style={{cursor: \"pointer\"}}\r\n                                            onClick={(e)=>handleDelete(pro)}\r\n                                        >\r\n                                        </i>\r\n                                        <i \r\n                                            class=\"fa fa-cogs\" \r\n                                            aria-hidden=\"true\" \r\n                                            style={{\r\n                                                cursor: \"pointer\",\r\n                                                marginLeft: \"15px\",\r\n                                            }}\r\n                                            onClick={(e) => handleEdit(pro)}>\r\n\r\n                                        </i>\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                    </tbody>\r\n                </Table>\r\n            </div>         \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ManageProject;\r\n",["104","105"],"C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\Container\\Management\\Permission\\CreatePermissionAdmin.jsx",["106","107","108","109","110","111","112","113"],"C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\Container\\Management\\Permission\\CreatePermissionOthers.jsx",["114","115","116","117","118","119"],"import React, { useState, useEffect } from 'react'\r\nimport {Form, Button}  from 'react-bootstrap';\r\nimport './ManagePermission.css'\r\nimport Select from 'react-select';\r\nimport makeAnimated from 'react-select/animated';\r\nimport { collection, addDoc } from \"firebase/firestore\"; \r\nimport { db, auth } from '../../../Firebase Config/firebase';\r\nimport { useNavigate } from 'react-router'\r\nimport Loading from '../../../components/Loading';\r\nimport { onAuthStateChanged } from 'firebase/auth';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addTask } from '../../../Reducer/firebaseSlice';\r\n\r\nexport default function CreatePermissionOthers() {\r\n\r\n    const navigate = useNavigate();\r\n    const [isLoading, setIsLoading] = useState();\r\n    const dispatch = useDispatch();\r\n\r\n    const currentUserRole = useSelector((state) => state.firebase.currentRoleFS)\r\n    const currentUser = useSelector((state) => state.firebase.currentUserFS)\r\n\r\n    // data to in input to create new permission\r\n    const [roleName, setRoleName] = useState(\"\");\r\n    const [projectInput, setProjectInput] = useState([]);\r\n    const [data, setdata] = useState([]);\r\n    const [options, setOptions] = useState([]);\r\n\r\n    const allProjects = useSelector((state) => state.firebase.allProjects)\r\n    const [toSend, setToSend] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const authentication = onAuthStateChanged(auth,(user) => {\r\n            if (user) {\r\n                navigate('/CreatePermissionOthers')\r\n            } else {\r\n                navigate('/')\r\n           }\r\n        }) \r\n        \r\n        return authentication\r\n    },[])\r\n\r\n    const optionsProject = () => {\r\n        let pName = currentUserRole.project[0].name\r\n        setOptions([{value: pName, label: pName}])\r\n    }\r\n\r\n    const inputToDefault = () => {\r\n        setRoleName(\"\")\r\n        setProjectInput([])\r\n        setdata([])\r\n    }\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        setIsLoading(true)\r\n\r\n        dispatch(addTask(\"Create role\"))\r\n\r\n        var update = [...toSend]\r\n        setToSend(update)\r\n\r\n        if (roleName !== \"\") {\r\n            await addDoc(collection(db, \"roles\"), {\r\n                name: roleName,\r\n                project: toSend,\r\n            });\r\n        }\r\n            \r\n        inputToDefault()\r\n        setIsLoading(false)\r\n    }\r\n\r\n    const animatedComponents = makeAnimated();\r\n\r\n    const handleChange = (event) => {\r\n        setProjectInput(event)\r\n        if (event.length < 1) {\r\n            setToSend([])\r\n        }\r\n    }\r\n\r\n    const subMenuOptions = (event) => {\r\n        var filteredProject = [{name: \"\", options: [{value: \"\", label: \"\"}]}]\r\n        var index = 0\r\n        event.map((inp) => {\r\n            \r\n            allProjects.map((moc) => {\r\n                var option = []\r\n                var indexOption = 0\r\n                // if project in input\r\n                if (inp.value === moc.name) {\r\n                    moc.subMenu?.map((sub) => {\r\n                        option[indexOption] = {value: sub, label: sub}\r\n                        indexOption = indexOption + 1\r\n                    })\r\n                    filteredProject[index] = {name: inp.value, options: option}\r\n                    index = index + 1\r\n                }\r\n            })\r\n        })\r\n        setdata(filteredProject)\r\n    }\r\n\r\n    if (currentUserRole.length !== 0 && options.length < 1) {\r\n        optionsProject()\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className='content-wrapper'>\r\n            <Loading isLoading={isLoading} />\r\n            <div className='CreatePermission'>\r\n                <button className='back-btn' >{'<'} <a onClick={() => {\r\n                    if (currentUser.role === \"Admin\") {\r\n                        navigate(\"/permission\")\r\n                    }else {\r\n                        navigate(\"/permissionOthers\")\r\n                    }\r\n                }}>Back</a></button>\r\n                <div className='create-permission'>\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Permission Name</Form.Label>\r\n                            <Form.Control type=\"text\" value={roleName} placeholder=\"Name\" onChange={(e) => {setRoleName(e.target.value)}} />\r\n                            <Form.Text className=\"text-muted\">\r\n                                Project name have to be prefix.\r\n                            </Form.Text>\r\n                        </Form.Group>\r\n                        \r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Select Projects</Form.Label>\r\n                            <div className=\"mb-3\">\r\n                                <Select\r\n                                    value={projectInput}\r\n                                    closeMenuOnSelect={false}\r\n                                    components={animatedComponents}\r\n                                    isMulti\r\n                                    options={options}\r\n                                    onChange={(event) => {\r\n                                        handleChange(event)\r\n                                        subMenuOptions(event)\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </Form.Group>\r\n                        {(projectInput.length !== 0) ? (\r\n                            <div>\r\n                                {data.map((d, index) => {\r\n                                    return (\r\n                                        <Form.Group key={d.name} className=\"mb-3\">\r\n                                            <Form.Label>Select Sub Menu of {d.name}</Form.Label>\r\n                                            <div className=\"mb-3\">\r\n                                                <Select\r\n                                                    closeMenuOnSelect={false}\r\n                                                    components={animatedComponents}\r\n                                                    isMulti\r\n                                                    options={d.options}\r\n                                                    onChange={(event) => {\r\n                                                        var arrSubMenu = []\r\n                                                        var addSub = [...toSend]\r\n                                                        event.map((e, eIndex) => {\r\n                                                            arrSubMenu[eIndex] = e.value\r\n                                                        })\r\n                                                        addSub[index] = {name: d.name, subMenu: arrSubMenu}\r\n                                                        setToSend(addSub)\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n                                        </Form.Group>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                        ) : \"\"}\r\n                       \r\n                        <Button onClick={(e) => handleSubmit(e)} variant=\"primary\" type=\"submit\">\r\n                            Create\r\n                        </Button>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n",["120","121"],"C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\reportWebVitals.js",[],"C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\components\\Menu.jsx",["122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140"],"C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\components\\CircleLoader.jsx",[],"C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\Container\\Management\\Permission\\PermissionForAdmin.jsx",["141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166"],"C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\Container\\Management\\Permission\\PermissionForOthers.jsx",["167","168","169","170","171","172","173","174","175","176","177","178","179","180","181"],"import React, { useState, useEffect } from 'react'\r\nimport { Table } from 'react-bootstrap';\r\nimport { useNavigate } from 'react-router'\r\nimport { Modal, Form, Button }  from 'react-bootstrap';\r\nimport Select from 'react-select';\r\nimport makeAnimated from 'react-select/animated';\r\nimport { db, auth } from '../../../Firebase Config/firebase';\r\nimport { doc, deleteDoc, updateDoc } from 'firebase/firestore';\r\nimport Loading from '../../../components/Loading';\r\nimport './ManagePermission.css'\r\nimport { useSelector } from 'react-redux';\r\nimport { onAuthStateChanged } from 'firebase/auth';\r\n\r\nexport default function PermissionForOthers() {\r\n\r\n    const animatedComponents = makeAnimated();\r\n    const navigate = useNavigate();\r\n    const [isLoading, setIsLoading] = useState();\r\n    const [isData, setIsData] = useState(false);\r\n\r\n    const currentUserRole = useSelector((state) => state.firebase.currentRoleFS)\r\n    const allRolesR = useSelector((state) => state.firebase.allRoles)\r\n    const allProjectsR = useSelector((state) => state.firebase.allProjects)\r\n    const allUsersR = useSelector((state) => state.firebase.allUsers)\r\n\r\n    const [allRoles, setAllRoles] = useState([...allRolesR])\r\n    const [allProjects, setAllProjects] = useState([...allProjectsR]);\r\n    const [allUsers, setAllUsers] = useState([...allUsersR]);\r\n    const [rolesInSamePro, setRoleInSamePro] = useState([])\r\n    const [clickedRole, setClickedRole] = useState({}); // store the role user want to add, edit, delete\r\n\r\n    const [isPopup, setIsPopup] = useState(false);\r\n    const [isDel, setIsDel] = useState(false);\r\n\r\n    const [newRoleName, setNewRoleName] = useState(\"\");\r\n\r\n    const [proOptions, setProOptions] = useState({}); // store options to select\r\n\r\n    const [projectInput, setProjectInput] = useState([]); // store project options input that user select ex. [{value: \"\", label: \"\"}]\r\n    const [projectChange, setProjectChange] = useState([]); // store project that will send to firestore\r\n\r\n    useEffect(() => {\r\n        const authentication = onAuthStateChanged(auth,(user) => {\r\n            if (user) {\r\n                navigate('/permissionOthers')\r\n            } else {\r\n                navigate('/')\r\n           }\r\n        }) \r\n        \r\n        return authentication\r\n    },[])\r\n\r\n    // update allRoles when allRoles in redux change\r\n    useEffect(() => {\r\n        setAllRoles([...allRolesR])\r\n    }, [allRolesR])\r\n\r\n    const getSameRolesAgain = async () => {\r\n        let roles = []\r\n        let index = 0\r\n        if (currentUserRole !== undefined) {\r\n            allRoles.map((r) => {\r\n                if (r.name !== \"Admin\" && r?.name?.toLowerCase().includes(currentUserRole.name.split(\"Admin\")[0].toLowerCase())) {\r\n                    roles[index] = r\r\n                    index += 1\r\n                }\r\n            })\r\n            setRoleInSamePro(roles)\r\n        }\r\n\r\n    }\r\n\r\n    if (!isData) {\r\n        setIsData(true)\r\n        getSameRolesAgain()\r\n    }\r\n\r\n    // create options for user select of edit permission\r\n    const genProjectOptions = (project) => {\r\n        let options = []\r\n        project.map((data, index) => {\r\n            options[index] = {value: data.name, label: data.name}\r\n        })\r\n\r\n        return options\r\n    }\r\n\r\n    // call when click btn to close all popup\r\n    const handleClosePopup = () => {\r\n        setIsPopup(false)\r\n        setClickedRole({})\r\n        setNewRoleName(\"\")\r\n        setProOptions({})\r\n        setProjectInput([])\r\n    }\r\n\r\n    const handleCloseDel = () => {\r\n        setIsDel(false)\r\n        setClickedRole([])\r\n    }\r\n\r\n    const handleEditBtn = (role) => {\r\n        let options = genProjectOptions(role.project)\r\n        setIsPopup(true)\r\n        setClickedRole(role)\r\n        setNewRoleName(role.name)\r\n        setProOptions(options)\r\n        setProjectInput(options)\r\n    }\r\n\r\n    const handleDeleteBtn = (role) => {\r\n        setClickedRole(role)\r\n        setIsDel(true)\r\n    }\r\n\r\n    const handleSubmitEdit = async () => {\r\n        setIsLoading(true)\r\n        let update = [...projectChange]\r\n        let sendPro = []\r\n        \r\n        // set value to current\r\n        setProjectChange(update)\r\n        setIsPopup(false)\r\n        // store new value of project to sendPro\r\n        clickedRole.project.map((pro, index) => {\r\n            projectChange.map((proC) => {\r\n                if(pro.name === proC?.name) {\r\n                    sendPro[index] = proC\r\n                } else {\r\n                    sendPro[index] = pro\r\n                }\r\n            })\r\n        })\r\n        \r\n        // update field(name and project) in document roles in firestore\r\n        const docRef = doc(db, \"roles\", clickedRole.id)\r\n        await updateDoc(docRef, {\r\n            \"name\" : newRoleName,\r\n            \"project\" : sendPro\r\n        })\r\n        \r\n        setIsLoading(false)\r\n        // close popup and set all variable to default\r\n        handleClosePopup()\r\n    }\r\n\r\n    const deleteRole = async () => {\r\n        setIsLoading(true)\r\n        \r\n        setIsDel(false)\r\n\r\n        const roleDoc = doc(db, \"roles\", clickedRole.id);\r\n        await deleteDoc(roleDoc);\r\n\r\n        setIsLoading(false)\r\n\r\n        allUsers.map((user) => {\r\n            if (user.role === clickedRole.name) {\r\n                const docRef = doc(db, \"users\", user.id)\r\n                updateDoc(docRef, {\r\n                    \"role\" : \"\",\r\n                })\r\n            }\r\n        })\r\n        \r\n    }\r\n\r\n    const popupDel = () => {\r\n        return (isDel) ? (\r\n            <div>\r\n                <Modal show={true} onHide={(e)=>{handleCloseDel()}} centered>\r\n                    <Modal.Header>\r\n                        <Modal.Title>Confirm Delete <i onClick={(e) => {handleCloseDel()}} style={{cursor:\"pointer\", marginLeft:\"270px\"}} className='fa fa-times'/></Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        Are you sure to delete this permission ?\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={(e) => {\r\n                            handleCloseDel()\r\n                        }}>\r\n                            Cancle\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={(e) =>{\r\n                            deleteRole()\r\n                        }}>\r\n                            Delete\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        ) : \"\"\r\n    }\r\n\r\n    function popupEdit() {\r\n        return (isPopup) ? (\r\n          <div>\r\n            <Modal show={true} onHide={(e)=>{handleClosePopup()}}>\r\n              <Modal.Header>\r\n                <Modal.Title>Edit Permission <i onClick={(e) => handleClosePopup()} style={{cursor:\"pointer\", marginLeft:\"270px\"}} className='fa fa-times'/></Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                <Form>\r\n                    <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                        type=\"text\"\r\n                        placeholder={clickedRole.name} //current role name\r\n                        value={newRoleName}\r\n                        onChange={(e) => {setNewRoleName(e.target.value)}}\r\n                        autoFocus\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\">\r\n                        <Form.Label>Select Projects</Form.Label>\r\n                        <div className=\"mb-3\">\r\n                            <Select\r\n                                defaultValue={proOptions}\r\n                                closeMenuOnSelect={true}\r\n                                components={animatedComponents}\r\n                                isMulti\r\n                                options={proOptions}\r\n                                onChange={(event) => {\r\n                                    setProjectInput(event)\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </Form.Group>\r\n\r\n                    {(projectInput.length > 0) ? (\r\n                        <div>\r\n                            {projectInput.map((pro, index) => {\r\n                                let subOptions = []\r\n                                let defOptions = []\r\n                                \r\n                                let projectName = \"\"\r\n                                // Set subMenu in allProjects to format => {value: \"\", label: \"\"} and keep at subOptions\r\n                                allProjects.map((p) => {\r\n                                    if (pro.value === p.name) {\r\n                                        p.subMenu.map((subM, subMIndex) => {\r\n                                            subOptions[subMIndex] = {value: subM, label: subM}\r\n                                        })\r\n                                    }\r\n                                })\r\n\r\n                                // Set subMenu in clickedRole(value form edit btn) to format => {value: \"\", label: \"\"} and keep at defOptions\r\n                                clickedRole.project.map((p) => {\r\n                                    if (p.name === pro.value) {\r\n                                        p.subMenu.map((subM, subMIndex) => {\r\n                                            defOptions[subMIndex] = {value: subM, label: subM}\r\n                                        })\r\n                                    }\r\n                                })\r\n\r\n                                return (\r\n                                    <Form.Group className=\"mb-3\">\r\n                                    <Form.Label>{pro.label}</Form.Label>\r\n                                    <div className=\"mb-3\">\r\n                                        <Select\r\n                                            defaultValue={defOptions}\r\n                                            closeMenuOnSelect={true}\r\n                                            components={animatedComponents}\r\n                                            isMulti\r\n                                            options={subOptions}\r\n                                            onChange={(event) => {\r\n                                                var arrSubMenu = []\r\n                                                var addSub = [...projectChange]\r\n                                                event.map((e, eIndex) => {\r\n                                                    arrSubMenu[eIndex] = e.value\r\n                                                })\r\n                                                addSub[index] = {name: pro.value, subMenu: arrSubMenu}\r\n                                                setProjectChange(addSub)\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                </Form.Group>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                        \r\n                    ) : \"\"}\r\n                </Form>\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={(e) => {handleClosePopup()}}>\r\n                  Close\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={(e) =>{handleSubmitEdit()}}>\r\n                  Save Changes\r\n                </Button>\r\n              </Modal.Footer>\r\n            </Modal>\r\n          </div>\r\n        ) : \"\";\r\n      }\r\n\r\n    return (\r\n        <div className='content-wrapper'>\r\n            <Loading isLoading={isLoading} />\r\n            {popupEdit()}\r\n            {popupDel()}\r\n            <div className='permission'>\r\n                <div className='top'>\r\n                    <h2 className='topic'>Permission</h2>\r\n                    <div className='create'>\r\n                        <button className=\"create-btn\" ><a onClick={() => navigate('/CreatePermissionOthers')}>Create New Permission</a></button>\r\n                    </div>\r\n                </div>\r\n                <Table striped bbordered>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Number</th>\r\n                            <th>Role Name</th>\r\n                            <th>Projects {'('}Sub Menu{')'}</th>\r\n                            <th>Commands</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {rolesInSamePro?.map((role,index) => {\r\n                            return (\r\n                                <tr>\r\n                                    <td>{index + 1}</td>\r\n                                    <td>{role.name}</td>\r\n                                    <td>{role?.project.map((project) => {\r\n                                        return <div>{project.name} {'('}{project.subMenu.map((sub, subIndex) => {\r\n                                            if (subIndex > 0) {\r\n                                                return `, ${sub}`\r\n                                            } else {\r\n                                                return ` ${sub}`\r\n                                            }\r\n                                        })} {')'}</div>\r\n                                    })}\r\n                                    </td>\r\n                                    <td>\r\n                                        <Button className=\"btn m-2 edit\" onClick={(e) => {handleEditBtn(role)}}>Edit</Button>\r\n                                        <button className=\"m-2 del\" onClick={(e) => {handleDeleteBtn(role)}}>Delete</button>\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\index.js",[],"C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\Container\\Login\\login.jsx",["182","183","184"],"import React, { useState,useRef, useEffect } from 'react'\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { useNavigate } from 'react-router'\r\nimport AlertBox from '../../components/alert';\r\nimport { signInWithEmailAndPassword, signInWithPopup } from 'firebase/auth';\r\nimport { auth,provider } from '../../Firebase Config/firebase';\r\nimport './login.css'\r\nimport { db } from '../../Firebase Config/firebaseSec';\r\nimport {\r\n  collection,\r\n  getDocs,\r\n  updateDoc,\r\n  doc,\r\n} from \"firebase/firestore\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteAll } from '../../Reducer/firebaseSlice';\r\n\r\nconst comp_form = \"@rabbit.co.th\";\r\nconst theme = createTheme();\r\nexport default function Login() {\r\n\r\n  const dispatch = useDispatch();\r\n  const oldUser = useSelector((state) => state.firebase.currentUser);\r\n\r\n  const [userInfo, setUserInfo] = useState({ email: '', password: '' });\r\n  const [alert, setAlert] = useState({visible:false, severity:'', message:''});\r\n  const navigate = useNavigate();\r\n  const timerRef = useRef(null);\r\n\r\n  const usersCollectionRef = collection(db, \"users\");\r\n  const [blockUser, setBlockUser] = useState({ id: '',email: '', password: '', isBlock: false });\r\n\r\n  if (oldUser !== \"\") dispatch(deleteAll())\r\n\r\n  function goBlock() {\r\n    const blocker = async () => {\r\n      if(blockUser.isBlock) {\r\n        setAlert({ visible:true,severity:'error',message:\"This account has been bolcked!\"})\r\n        timerRef.current= setTimeout(() => {\r\n          setAlert({ visible:false,severity:'',message:''})\r\n        },5000)\r\n      } else {\r\n        await firestoreBlock()\r\n      }\r\n    };\r\n\r\n    const firestoreBlock = async () => {\r\n      \r\n      const userDoc = doc(db, \"users\", blockUser.id);\r\n      updateDoc(userDoc, {\r\n        \"isBlocked\": true  \r\n      })\r\n    }\r\n    blocker();\r\n  }\r\n\r\n  function getCurrentProfile() {\r\n    const getUser = async () => {\r\n      const data = await getDocs(usersCollectionRef)\r\n      .then((usersColl) => {\r\n        usersColl.docs.map((doc) => {\r\n\r\n          // if email on input equal to email in firestore will setState\r\n          if (doc.data().email === userInfo.email) {\r\n            setBlockUser({\r\n              id: doc.id,\r\n              email: doc.data().email,\r\n              password: doc.data().password,\r\n              isBlock: doc.data().isBlocked\r\n            });\r\n          }\r\n        })\r\n      })\r\n    }\r\n    getUser();\r\n  }\r\n\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n  })\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if(blockUser.isBlock) {\r\n      setAlert({ visible:true,severity:'error',message:\"This account has been bolcked!\"})\r\n      timerRef.current= setTimeout(() => {\r\n        setAlert({ visible:false,severity:'',message:''})\r\n      },5000)\r\n    } else {\r\n      signInWithEmailAndPassword(auth, userInfo.email, userInfo.password)\r\n        .then(userInformation => {\r\n          if (userInfo.email.includes(comp_form)){\r\n            navigate('/dashboard')\r\n          }\r\n          else{\r\n            navigate('/')\r\n          }\r\n          \r\n        })\r\n        .catch(error => {\r\n\r\n          if(error.message === \"Firebase: Access to this account has been temporarily disabled due to many failed login attempts. You can immediately restore it by resetting your password or you can try again later. (auth/too-many-requests).\") {\r\n            goBlock()\r\n          } else {\r\n            setAlert({ visible:true,severity:'error',message:error.message})\r\n            timerRef.current= setTimeout(() => {\r\n              setAlert({ visible:false,severity:'',message:''})\r\n            },5000)\r\n          }\r\n      })\r\n    }\r\n  };\r\n    \r\n  // const handlePassword = () => {\r\n  //   sendPasswordResetEmail(auth, userInfo.email)\r\n  //     .then(() => {\r\n  //       setAlert({ visible: true, severity: 'success', message: 'Email Sent Successfully' })\r\n  //        timerRef.current= setTimeout(() => {\r\n  //         setAlert({ visible:false,severity:'',message:''})\r\n  //       },2000)\r\n  //     })\r\n  //     .catch(error => {\r\n  //     setAlert({ visible:true,severity:'error',message:error.message})\r\n  //       timerRef.current= setTimeout(() => {\r\n  //         setAlert({ visible:false,severity:'',message:''})\r\n  //       },2000)\r\n  //   })\r\n  // }\r\n    \r\n  const handleGoogleButton = async() => {\r\n    // provider.addScope('https://www.googleapis.com/auth/contacts.readonly');\r\n    provider.setCustomParameters ({\r\n      'login_hint': \"jsmith@rabbit.co.th\",\r\n      'hd': 'rabbit.co.th',\r\n      'promp': 'select_account'\r\n    })\r\n\r\n    const user = await signInWithPopup(auth, provider).then(result => {\r\n      // if (user.auth.email.includes(comp_form)) {\r\n      //   navigate('/dashboard')\r\n      // } else {\r\n      //   deleteUser(user.id)\r\n      //   signOut(auth).then(() => {\r\n      //   navigate('/')\r\n      //   alert(\"You have to use @rabbit.co.th domain\")\r\n      //   })\r\n      // }\r\n      navigate('/dashboard')\r\n    }).catch(error => {\r\n      console.log(error)\r\n    })\r\n\r\n    \r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <AlertBox visible={alert.visible} severity={alert.severity} message={alert.message}/>\r\n        <CssBaseline />\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <img src=\"./rabbitcard-logo.jpg\" alt=\"rabbit-logo\" className=\"rabbit-logo\" style={{border: '5px solid black', borderRadius:'50%', height: '200px',width: 'auto',marginBottom: \"20px\"}} />\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              value={userInfo.email}\r\n              onChange={(event)=>{setUserInfo({...userInfo,email:event.target.value})}}\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              value={userInfo.password}\r\n              onChange={(event)=>{setUserInfo({...userInfo,password:event.target.value})}}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n              \r\n            >\r\n              Sign In\r\n            </Button>\r\n          </Box>\r\n          <button className='google_button' onClick={handleGoogleButton}><img src={\"./google.png\"} style={{width: \"30px\"}} alt=''/></button>\r\n        </Box>\r\n      </Container>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n",["185","186"],"C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\Container\\Management\\ManageUser.jsx",["187","188"],"C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\components\\Loading.jsx",[],"C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\Container\\Projects\\Datafile Morniting\\ShowTable.js",["189","190","191"],"C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\Container\\Projects\\Rabbit SmartWatch\\containers\\Monitors\\Smartwatch_Search.jsx",["192","193","194","195","196"],"C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\Container\\Home\\Dashboard.jsx",["197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229"],"C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\Container\\Projects\\Datafile Morniting\\PDF.jsx",["230"],"C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\Container\\Projects\\Datafile Morniting\\Home.jsx",["231","232"],"C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\Container\\Projects\\Datafile Morniting\\TableContainer.jsx",["233","234","235"],"C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\store.js",[],"C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\Container\\Projects\\BTSQR\\Frontend\\containers\\Monitors\\Bts_Search.jsx",["236","237"],"C:\\Users\\aooko\\Documents\\GitHub\\rabbit-dash\\src\\Container\\Projects\\BTSQR\\Frontend\\containers\\Home.js",["238"],{"ruleId":"239","severity":1,"message":"240","line":12,"column":19,"nodeType":"241","messageId":"242","endLine":12,"endColumn":36},{"ruleId":"239","severity":1,"message":"243","line":12,"column":38,"nodeType":"241","messageId":"242","endLine":12,"endColumn":52},{"ruleId":"239","severity":1,"message":"244","line":21,"column":5,"nodeType":"241","messageId":"242","endLine":21,"endColumn":15},{"ruleId":"245","severity":1,"message":"246","line":68,"column":7,"nodeType":"247","endLine":68,"endColumn":9,"suggestions":"248"},{"ruleId":"249","severity":1,"message":"250","line":111,"column":26,"nodeType":"251","messageId":"252","endLine":111,"endColumn":28},{"ruleId":"249","severity":1,"message":"250","line":134,"column":41,"nodeType":"251","messageId":"252","endLine":134,"endColumn":43},{"ruleId":"249","severity":1,"message":"250","line":152,"column":26,"nodeType":"251","messageId":"252","endLine":152,"endColumn":28},{"ruleId":"249","severity":1,"message":"250","line":154,"column":41,"nodeType":"251","messageId":"252","endLine":154,"endColumn":43},{"ruleId":"249","severity":1,"message":"250","line":182,"column":26,"nodeType":"251","messageId":"252","endLine":182,"endColumn":28},{"ruleId":"249","severity":1,"message":"250","line":184,"column":38,"nodeType":"251","messageId":"252","endLine":184,"endColumn":40},{"ruleId":"249","severity":1,"message":"250","line":230,"column":30,"nodeType":"251","messageId":"252","endLine":230,"endColumn":32},{"ruleId":"253","replacedBy":"254"},{"ruleId":"255","replacedBy":"256"},{"ruleId":"245","severity":1,"message":"246","line":38,"column":7,"nodeType":"247","endLine":38,"endColumn":9,"suggestions":"257"},{"ruleId":"249","severity":1,"message":"250","line":44,"column":31,"nodeType":"251","messageId":"252","endLine":44,"endColumn":33},{"ruleId":"249","severity":1,"message":"250","line":54,"column":32,"nodeType":"251","messageId":"252","endLine":54,"endColumn":34},{"ruleId":"249","severity":1,"message":"250","line":112,"column":25,"nodeType":"251","messageId":"252","endLine":112,"endColumn":27},{"ruleId":"249","severity":1,"message":"250","line":114,"column":37,"nodeType":"251","messageId":"252","endLine":114,"endColumn":39},{"ruleId":"249","severity":1,"message":"250","line":119,"column":44,"nodeType":"251","messageId":"252","endLine":119,"endColumn":46},{"ruleId":"258","severity":1,"message":"259","line":135,"column":53,"nodeType":"260","endLine":135,"endColumn":96},{"ruleId":"249","severity":1,"message":"250","line":177,"column":79,"nodeType":"251","messageId":"252","endLine":177,"endColumn":81},{"ruleId":"245","severity":1,"message":"246","line":42,"column":7,"nodeType":"247","endLine":42,"endColumn":9,"suggestions":"261"},{"ruleId":"249","severity":1,"message":"250","line":87,"column":25,"nodeType":"251","messageId":"252","endLine":87,"endColumn":27},{"ruleId":"249","severity":1,"message":"250","line":89,"column":35,"nodeType":"251","messageId":"252","endLine":89,"endColumn":37},{"ruleId":"249","severity":1,"message":"250","line":94,"column":44,"nodeType":"251","messageId":"252","endLine":94,"endColumn":46},{"ruleId":"258","severity":1,"message":"259","line":115,"column":53,"nodeType":"260","endLine":121,"endColumn":20},{"ruleId":"249","severity":1,"message":"250","line":163,"column":79,"nodeType":"251","messageId":"252","endLine":163,"endColumn":81},{"ruleId":"253","replacedBy":"262"},{"ruleId":"255","replacedBy":"263"},{"ruleId":"239","severity":1,"message":"264","line":12,"column":16,"nodeType":"241","messageId":"242","endLine":12,"endColumn":23},{"ruleId":"249","severity":1,"message":"250","line":26,"column":29,"nodeType":"251","messageId":"252","endLine":26,"endColumn":31},{"ruleId":"239","severity":1,"message":"265","line":41,"column":9,"nodeType":"241","messageId":"242","endLine":41,"endColumn":10},{"ruleId":"249","severity":1,"message":"250","line":43,"column":29,"nodeType":"251","messageId":"252","endLine":43,"endColumn":31},{"ruleId":"239","severity":1,"message":"266","line":52,"column":9,"nodeType":"241","messageId":"242","endLine":52,"endColumn":13},{"ruleId":"258","severity":1,"message":"259","line":58,"column":9,"nodeType":"260","endLine":58,"endColumn":121},{"ruleId":"258","severity":1,"message":"259","line":94,"column":17,"nodeType":"260","endLine":94,"endColumn":41},{"ruleId":"258","severity":1,"message":"267","line":101,"column":17,"nodeType":"260","endLine":101,"endColumn":50},{"ruleId":"258","severity":1,"message":"259","line":110,"column":21,"nodeType":"260","endLine":110,"endColumn":120},{"ruleId":"258","severity":1,"message":"259","line":120,"column":21,"nodeType":"260","endLine":120,"endColumn":117},{"ruleId":"258","severity":1,"message":"259","line":131,"column":21,"nodeType":"260","endLine":135,"endColumn":74},{"ruleId":"258","severity":1,"message":"267","line":146,"column":21,"nodeType":"260","endLine":146,"endColumn":54},{"ruleId":"258","severity":1,"message":"267","line":166,"column":17,"nodeType":"260","endLine":166,"endColumn":50},{"ruleId":"258","severity":1,"message":"267","line":187,"column":23,"nodeType":"260","endLine":187,"endColumn":56},{"ruleId":"258","severity":1,"message":"259","line":201,"column":45,"nodeType":"260","endLine":201,"endColumn":151},{"ruleId":"258","severity":1,"message":"267","line":222,"column":17,"nodeType":"260","endLine":222,"endColumn":50},{"ruleId":"258","severity":1,"message":"267","line":231,"column":21,"nodeType":"260","endLine":231,"endColumn":54},{"ruleId":"258","severity":1,"message":"267","line":240,"column":25,"nodeType":"260","endLine":240,"endColumn":58},{"ruleId":"258","severity":1,"message":"267","line":246,"column":25,"nodeType":"260","endLine":246,"endColumn":58},{"ruleId":"239","severity":1,"message":"268","line":29,"column":25,"nodeType":"241","messageId":"242","endLine":29,"endColumn":39},{"ruleId":"239","severity":1,"message":"269","line":30,"column":22,"nodeType":"241","messageId":"242","endLine":30,"endColumn":33},{"ruleId":"239","severity":1,"message":"270","line":45,"column":12,"nodeType":"241","messageId":"242","endLine":45,"endColumn":19},{"ruleId":"239","severity":1,"message":"271","line":45,"column":21,"nodeType":"241","messageId":"242","endLine":45,"endColumn":31},{"ruleId":"245","severity":1,"message":"246","line":57,"column":7,"nodeType":"247","endLine":57,"endColumn":9,"suggestions":"272"},{"ruleId":"249","severity":1,"message":"250","line":76,"column":35,"nodeType":"251","messageId":"252","endLine":76,"endColumn":37},{"ruleId":"249","severity":1,"message":"250","line":87,"column":31,"nodeType":"251","messageId":"252","endLine":87,"endColumn":33},{"ruleId":"249","severity":1,"message":"250","line":89,"column":42,"nodeType":"251","messageId":"252","endLine":89,"endColumn":44},{"ruleId":"249","severity":1,"message":"250","line":138,"column":46,"nodeType":"251","messageId":"252","endLine":138,"endColumn":48},{"ruleId":"249","severity":1,"message":"250","line":140,"column":49,"nodeType":"251","messageId":"252","endLine":140,"endColumn":51},{"ruleId":"249","severity":1,"message":"250","line":146,"column":26,"nodeType":"251","messageId":"252","endLine":146,"endColumn":28},{"ruleId":"249","severity":1,"message":"250","line":176,"column":46,"nodeType":"251","messageId":"252","endLine":176,"endColumn":48},{"ruleId":"249","severity":1,"message":"250","line":177,"column":38,"nodeType":"251","messageId":"252","endLine":177,"endColumn":40},{"ruleId":"249","severity":1,"message":"250","line":187,"column":26,"nodeType":"251","messageId":"252","endLine":187,"endColumn":28},{"ruleId":"249","severity":1,"message":"250","line":255,"column":26,"nodeType":"251","messageId":"252","endLine":255,"endColumn":28},{"ruleId":"249","severity":1,"message":"250","line":267,"column":29,"nodeType":"251","messageId":"252","endLine":267,"endColumn":31},{"ruleId":"249","severity":1,"message":"250","line":318,"column":63,"nodeType":"251","messageId":"252","endLine":318,"endColumn":65},{"ruleId":"249","severity":1,"message":"250","line":320,"column":81,"nodeType":"251","messageId":"252","endLine":320,"endColumn":83},{"ruleId":"249","severity":1,"message":"250","line":337,"column":83,"nodeType":"251","messageId":"252","endLine":337,"endColumn":85},{"ruleId":"239","severity":1,"message":"273","line":408,"column":37,"nodeType":"241","messageId":"242","endLine":408,"endColumn":48},{"ruleId":"249","severity":1,"message":"250","line":410,"column":53,"nodeType":"251","messageId":"252","endLine":410,"endColumn":55},{"ruleId":"249","severity":1,"message":"250","line":412,"column":73,"nodeType":"251","messageId":"252","endLine":412,"endColumn":75},{"ruleId":"249","severity":1,"message":"250","line":419,"column":61,"nodeType":"251","messageId":"252","endLine":419,"endColumn":63},{"ruleId":"249","severity":1,"message":"250","line":421,"column":73,"nodeType":"251","messageId":"252","endLine":421,"endColumn":75},{"ruleId":"249","severity":1,"message":"250","line":440,"column":71,"nodeType":"251","messageId":"252","endLine":440,"endColumn":73},{"ruleId":"258","severity":1,"message":"259","line":479,"column":57,"nodeType":"260","endLine":479,"endColumn":111},{"ruleId":"239","severity":1,"message":"268","line":27,"column":25,"nodeType":"241","messageId":"242","endLine":27,"endColumn":39},{"ruleId":"239","severity":1,"message":"269","line":28,"column":22,"nodeType":"241","messageId":"242","endLine":28,"endColumn":33},{"ruleId":"245","severity":1,"message":"246","line":52,"column":7,"nodeType":"247","endLine":52,"endColumn":9,"suggestions":"274"},{"ruleId":"249","severity":1,"message":"250","line":63,"column":30,"nodeType":"251","messageId":"252","endLine":63,"endColumn":32},{"ruleId":"249","severity":1,"message":"250","line":82,"column":35,"nodeType":"251","messageId":"252","endLine":82,"endColumn":37},{"ruleId":"249","severity":1,"message":"250","line":126,"column":46,"nodeType":"251","messageId":"252","endLine":126,"endColumn":48},{"ruleId":"249","severity":1,"message":"250","line":127,"column":38,"nodeType":"251","messageId":"252","endLine":127,"endColumn":40},{"ruleId":"249","severity":1,"message":"250","line":158,"column":29,"nodeType":"251","messageId":"252","endLine":158,"endColumn":31},{"ruleId":"239","severity":1,"message":"273","line":238,"column":37,"nodeType":"241","messageId":"242","endLine":238,"endColumn":48},{"ruleId":"249","severity":1,"message":"250","line":240,"column":53,"nodeType":"251","messageId":"252","endLine":240,"endColumn":55},{"ruleId":"249","severity":1,"message":"250","line":242,"column":73,"nodeType":"251","messageId":"252","endLine":242,"endColumn":75},{"ruleId":"249","severity":1,"message":"250","line":249,"column":61,"nodeType":"251","messageId":"252","endLine":249,"endColumn":63},{"ruleId":"249","severity":1,"message":"250","line":251,"column":73,"nodeType":"251","messageId":"252","endLine":251,"endColumn":75},{"ruleId":"249","severity":1,"message":"250","line":270,"column":71,"nodeType":"251","messageId":"252","endLine":270,"endColumn":73},{"ruleId":"258","severity":1,"message":"259","line":308,"column":57,"nodeType":"260","endLine":308,"endColumn":112},{"ruleId":"239","severity":1,"message":"275","line":65,"column":13,"nodeType":"241","messageId":"242","endLine":65,"endColumn":17},{"ruleId":"249","severity":1,"message":"250","line":67,"column":34,"nodeType":"251","messageId":"252","endLine":67,"endColumn":36},{"ruleId":"239","severity":1,"message":"266","line":145,"column":11,"nodeType":"241","messageId":"242","endLine":145,"endColumn":15},{"ruleId":"253","replacedBy":"276"},{"ruleId":"255","replacedBy":"277"},{"ruleId":"245","severity":1,"message":"278","line":98,"column":5,"nodeType":"247","endLine":98,"endColumn":7,"suggestions":"279"},{"ruleId":"249","severity":1,"message":"250","line":138,"column":26,"nodeType":"251","messageId":"252","endLine":138,"endColumn":28},{"ruleId":"239","severity":1,"message":"280","line":1,"column":17,"nodeType":"241","messageId":"242","endLine":1,"endColumn":26},{"ruleId":"239","severity":1,"message":"281","line":1,"column":28,"nodeType":"241","messageId":"242","endLine":1,"endColumn":36},{"ruleId":"239","severity":1,"message":"282","line":10,"column":10,"nodeType":"241","messageId":"242","endLine":10,"endColumn":22},{"ruleId":"239","severity":1,"message":"283","line":22,"column":12,"nodeType":"241","messageId":"242","endLine":22,"endColumn":18},{"ruleId":"239","severity":1,"message":"284","line":27,"column":12,"nodeType":"241","messageId":"242","endLine":27,"endColumn":23},{"ruleId":"245","severity":1,"message":"285","line":44,"column":8,"nodeType":"247","endLine":44,"endColumn":18,"suggestions":"286"},{"ruleId":"239","severity":1,"message":"287","line":213,"column":11,"nodeType":"241","messageId":"242","endLine":213,"endColumn":22},{"ruleId":"288","severity":1,"message":"289","line":230,"column":263,"nodeType":"290","messageId":"291","endLine":230,"endColumn":268},{"ruleId":"239","severity":1,"message":"292","line":4,"column":16,"nodeType":"241","messageId":"242","endLine":4,"endColumn":18},{"ruleId":"239","severity":1,"message":"293","line":8,"column":10,"nodeType":"241","messageId":"242","endLine":8,"endColumn":12},{"ruleId":"239","severity":1,"message":"294","line":8,"column":13,"nodeType":"241","messageId":"242","endLine":8,"endColumn":18},{"ruleId":"245","severity":1,"message":"278","line":25,"column":6,"nodeType":"247","endLine":25,"endColumn":8,"suggestions":"295"},{"ruleId":"258","severity":1,"message":"267","line":41,"column":21,"nodeType":"260","endLine":41,"endColumn":33},{"ruleId":"258","severity":1,"message":"267","line":68,"column":19,"nodeType":"260","endLine":68,"endColumn":60},{"ruleId":"258","severity":1,"message":"267","line":86,"column":19,"nodeType":"260","endLine":86,"endColumn":60},{"ruleId":"258","severity":1,"message":"267","line":102,"column":19,"nodeType":"260","endLine":102,"endColumn":60},{"ruleId":"258","severity":1,"message":"267","line":118,"column":19,"nodeType":"260","endLine":118,"endColumn":60},{"ruleId":"296","severity":1,"message":"297","line":243,"column":25,"nodeType":"260","endLine":247,"endColumn":27},{"ruleId":"296","severity":1,"message":"297","line":266,"column":25,"nodeType":"260","endLine":270,"endColumn":27},{"ruleId":"296","severity":1,"message":"297","line":289,"column":25,"nodeType":"260","endLine":293,"endColumn":27},{"ruleId":"296","severity":1,"message":"297","line":312,"column":25,"nodeType":"260","endLine":316,"endColumn":27},{"ruleId":"258","severity":1,"message":"267","line":328,"column":27,"nodeType":"260","endLine":328,"endColumn":39},{"ruleId":"298","severity":1,"message":"299","line":329,"column":29,"nodeType":"260","endLine":332,"endColumn":31},{"ruleId":"258","severity":1,"message":"267","line":349,"column":27,"nodeType":"260","endLine":349,"endColumn":39},{"ruleId":"298","severity":1,"message":"299","line":350,"column":29,"nodeType":"260","endLine":353,"endColumn":31},{"ruleId":"258","severity":1,"message":"267","line":370,"column":27,"nodeType":"260","endLine":370,"endColumn":39},{"ruleId":"298","severity":1,"message":"299","line":371,"column":29,"nodeType":"260","endLine":374,"endColumn":31},{"ruleId":"258","severity":1,"message":"267","line":391,"column":27,"nodeType":"260","endLine":391,"endColumn":39},{"ruleId":"298","severity":1,"message":"299","line":392,"column":29,"nodeType":"260","endLine":395,"endColumn":31},{"ruleId":"258","severity":1,"message":"267","line":412,"column":27,"nodeType":"260","endLine":412,"endColumn":39},{"ruleId":"298","severity":1,"message":"299","line":413,"column":29,"nodeType":"260","endLine":416,"endColumn":31},{"ruleId":"258","severity":1,"message":"267","line":433,"column":27,"nodeType":"260","endLine":433,"endColumn":39},{"ruleId":"298","severity":1,"message":"299","line":434,"column":29,"nodeType":"260","endLine":437,"endColumn":31},{"ruleId":"258","severity":1,"message":"267","line":489,"column":27,"nodeType":"260","endLine":489,"endColumn":61},{"ruleId":"258","severity":1,"message":"267","line":494,"column":27,"nodeType":"260","endLine":494,"endColumn":61},{"ruleId":"258","severity":1,"message":"267","line":499,"column":27,"nodeType":"260","endLine":499,"endColumn":61},{"ruleId":"258","severity":1,"message":"267","line":504,"column":27,"nodeType":"260","endLine":504,"endColumn":61},{"ruleId":"258","severity":1,"message":"267","line":509,"column":27,"nodeType":"260","endLine":509,"endColumn":61},{"ruleId":"258","severity":1,"message":"267","line":846,"column":27,"nodeType":"260","endLine":846,"endColumn":65},{"ruleId":"258","severity":1,"message":"267","line":849,"column":27,"nodeType":"260","endLine":849,"endColumn":65},{"ruleId":"258","severity":1,"message":"267","line":853,"column":27,"nodeType":"260","endLine":853,"endColumn":65},{"ruleId":"245","severity":1,"message":"246","line":21,"column":7,"nodeType":"247","endLine":21,"endColumn":9,"suggestions":"300"},{"ruleId":"239","severity":1,"message":"301","line":9,"column":9,"nodeType":"241","messageId":"242","endLine":9,"endColumn":14},{"ruleId":"245","severity":1,"message":"246","line":85,"column":7,"nodeType":"247","endLine":85,"endColumn":9,"suggestions":"302"},{"ruleId":"239","severity":1,"message":"303","line":26,"column":5,"nodeType":"241","messageId":"242","endLine":26,"endColumn":19},{"ruleId":"249","severity":1,"message":"250","line":73,"column":25,"nodeType":"251","messageId":"252","endLine":73,"endColumn":27},{"ruleId":"249","severity":1,"message":"250","line":75,"column":26,"nodeType":"251","messageId":"252","endLine":75,"endColumn":28},{"ruleId":"245","severity":1,"message":"246","line":54,"column":7,"nodeType":"247","endLine":54,"endColumn":9,"suggestions":"304"},{"ruleId":"305","severity":1,"message":"306","line":217,"column":21,"nodeType":"260","endLine":217,"endColumn":125},{"ruleId":"245","severity":1,"message":"246","line":21,"column":7,"nodeType":"247","endLine":21,"endColumn":9,"suggestions":"307"},"no-unused-vars","'defindAllProjects' is defined but never used.","Identifier","unusedVar","'defindAllRoles' is defined but never used.","'onSnapshot' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["308"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-native-reassign",["309"],"no-negated-in-lhs",["310"],["311"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["312"],["309"],["310"],"'setRole' is assigned a value but never used.","'i' is assigned a value but never used.","'user' is assigned a value but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'setAllProjects' is assigned a value but never used.","'setAllUsers' is assigned a value but never used.","'roleDel' is assigned a value but never used.","'setRoleDel' is assigned a value but never used.",["313"],"'projectName' is assigned a value but never used.",["314"],"'data' is assigned a value but never used.",["309"],["310"],"React Hook useEffect has a missing dependency: 'router'. Either include it or remove the dependency array.",["315"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'NoEncryption' is defined but never used.","'noData' is assigned a value but never used.","'currentpage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'handleSearch'. Either include it or remove the dependency array.",["316"],"'handleClick' is assigned a value but never used.","no-dupe-keys","Duplicate key 'width'.","ObjectExpression","unexpected","'db' is defined but never used.","'re' is assigned a value but never used.","'setRe' is assigned a value but never used.",["317"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["318"],"'data1' is assigned a value but never used.",["319"],"'visibleColumns' is assigned a value but never used.",["320"],"react/jsx-pascal-case","Imported JSX component Date_range_picker must be in PascalCase or SCREAMING_SNAKE_CASE",["321"],{"desc":"322","fix":"323"},"no-global-assign","no-unsafe-negation",{"desc":"322","fix":"324"},{"desc":"322","fix":"325"},{"desc":"322","fix":"326"},{"desc":"322","fix":"327"},{"desc":"328","fix":"329"},{"desc":"330","fix":"331"},{"desc":"328","fix":"332"},{"desc":"322","fix":"333"},{"desc":"322","fix":"334"},{"desc":"322","fix":"335"},{"desc":"322","fix":"336"},"Update the dependencies array to be: [navigate]",{"range":"337","text":"338"},{"range":"339","text":"338"},{"range":"340","text":"338"},{"range":"341","text":"338"},{"range":"342","text":"338"},"Update the dependencies array to be: [router]",{"range":"343","text":"344"},"Update the dependencies array to be: [checkbox, handleSearch]",{"range":"345","text":"346"},{"range":"347","text":"344"},{"range":"348","text":"338"},{"range":"349","text":"338"},{"range":"350","text":"338"},{"range":"351","text":"338"},[2300,2302],"[navigate]",[1410,1412],[1627,1629],[2356,2358],[2281,2283],[3073,3075],"[router]",[1569,1579],"[checkbox, handleSearch]",[644,646],[594,596],[1997,1999],[1999,2001],[608,610]]